{"version":3,"sources":["reducers/notificationReducer.js","components/Notification.js","components/Vetomenu.js","components/YlaPalkki.js","graphql/mutations.js","utils/stuff.js","pages/Peli/Player.js","graphql/queries.js","graphql/subscriptions.js","pages/Peli/Tulosruutu.js","pages/Peli/NewGameModal.js","components/BarChart.js","pages/Peli/PlayerStats.js","components/TabPanel.js","pages/Peli/index.js","pages/Statsit/index.js","reducers/userReducer.js","components/LoginForm.js","pages/Kaverit/FriendRequestForm.js","pages/Kaverit/FriendRequests.js","hooks/useGetMe.js","pages/Kaverit/index.js","pages/Asetukset/OmatTiedot.js","pages/Asetukset/SalasananVaihto.js","pages/Asetukset/VaihdaEmail.js","pages/Asetukset/index.js","components/Button.js","pages/CreateUser/index.js","pages/VanhatPelit/Pelikortti.js","components/YesNoModal.js","pages/VanhatPelit/index.js","hooks/useStyles.js","pages/Etusivu/index.js","components/RestoreAccount.js","App.js","serviceWorkerRegistration.js","utils/apolloClient.js","reducers/tuloksetReducer.js","utils/store.js","utils/theme.js","index.js"],"names":["setNotification","message","type","data","reducer","state","alive","action","Notification","dispatch","useDispatch","notification","useSelector","Snackbar","open","autoHideDuration","onClose","Alert","severity","variant","Vetomenu","menuOpen","setMenuOpen","notLogged","user","Typography","Drawer","anchor","IconButton","onClick","ChevronLeft","Divider","List","ListItem","button","component","Link","to","disabled","YlaPalkki","openMenu","AppBar","position","Toolbar","edge","style","flexGrow","RESTORE_ACCOUNT","gql","LOGIN","CHANGE_SETTINGS","END_GAME","CREATE_GAME","DELETE_GAME","SET_SCORE","CREATE_USER","ANSWER_FRIEND_REQUEST","SEND_FRIEND_REQUEST","laskePisteet","tulokset","pisteet","dist","i","length","tulokset2ChartData","palautus","putteja","puttejaSisaan","prossa","etaisyys","timestamp2String","ts","aika","Date","setUTCMilliseconds","tunti","getHours","getTimezoneOffset","minsat","getMinutes","getDate","getMonth","getFullYear","RadioButtons","loading","Number","push","CircularProgress","Grid","item","xs","FormControlLabel","labelPlacement","value","label","control","Radio","color","size","padding","Player","player","round","roundData","useState","setLoading","useMutation","variables","roundId","setScore","distance","isNaN","Card","className","elevation","CardHeader","title","name","subheader","CardContent","RadioGroup","row","whiteSpace","onChange","e","target","score","catch","finally","container","GET_ME","GET_GAMES","GET_ROUND","CARD_CHANGED","Tulosruutu","kierrosData","kierros","client","useApolloClient","pushed","useSubscription","getRound","id","useEffect","dataMuistissa","readQuery","query","writeQuery","players","map","p","changedCard","ChevronRight","Kaverivalinta","kaverit","handleClick","k","Checkbox","NewGameModal","setModal","handleNewGame","mina","useQuery","pelaajat","setPelaajat","Modal","onSubmit","preventDefault","InputLabel","htmlFor","Select","native","checked","getMe","friends","pelaaja","includes","filter","fullWidth","marginTop","BarChart","otsikko","paperProps","Paper","height","text","min","max","argumentField","valueField","PlayerStats","statsit","marginBottom","TabPanel","props","children","index","other","hidden","Peli","modalOpen","tabValue","setTabValue","useLazyQuery","haeRundi","uusiPeli","paataPeli","poistaPeli","console","log","a","refetchQueries","res","createGame","handleDeleteGame","handleEndGame","Backdrop","Tabs","event","uusi","backgroundColor","Tab","Container","gutterBottom","paragraph","margin","Statsit","statsRawData","statsData","getGames","kaikkiPuttiProssat","kaikkiPisteet","maxPisteet","finished","find","game","setUser","LoginForm","loginProcess","setLoginProcess","login","handleLogout","clearStore","window","localStorage","clear","handleLogin","password","then","result","setItem","sailo","spacing","TextField","FriendRequestForm","handleSendFriendRequest","KaveriKortti","kaveri","handleFriendRequest","paddingLeft","display","width","float","paddingTop","fontWeight","Check","Cancel","FriendRequests","pyynnot","refetchMe","useGetMe","refetch","me","setMe","KaveriLista","Kaverit","answerFriendRequest","sendFriendRequest","friendRequests","friendId","answer","OmatTiedot","email","SalasananVaihto","vaihdaSalasana","uusiPw","uusiPw2","ok","pwHandler","setPwHandler","handleChange","updatedPwHandler","VaihdaEmail","handleChangeEmail","newEmail","setNewEmail","placeholder","test","String","toLowerCase","VaihdaNayttonimi","handleChangeName","newName","setNewName","Asetukset","changeSettings","handleChangeSettings","newSettings","handleCelarCache","justifycontent","direction","alignItems","Switch","shareStatics","Button","CreateUserForm","createUser","cuData","tunnus","errors","setErrors","handleSubmit","vars","password2","called","error","required","Pelikortti","peli","aktivoi","poista","showStats","setShotStats","avatar","timestamp","Collapse","in","unmountOnExit","timeout","reduce","total","cur","toFixed","YesNoModal","close","onYesClick","onNoClick","Dialog","paddingBottom","textAlign","VanhatPelit","poistaPeliId","setPoistaPeliId","g","handlePoistaPeli","useStyles","makeStyles","require","paper","Etusivu","tyylit","Aos","init","duration","data-aos","RestoreAccount","mailSent","setMailSent","restoreAccount","handleResetAccount","App","path","CreateUser","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","httpLink","HttpLink","uri","authLink","setContext","_","headers","token","getItem","authorization","socketLink","WebSocketLink","options","reconnect","splitLink","split","definition","getMainDefinition","kind","operation","concat","ApolloClient","cache","InMemoryCache","link","connectToDevTools","reducers","combineReducers","tuloksetReducer","userReducer","notificationReducer","store","createStore","theme","createMuiTheme","typography","fontFamily","fontWeightLight","fontWeightMedium","fontWeightRegular","fontWeightBold","h3","h4","h5","palette","secondary","red","ReactDOM","render","ApolloProvider","ThemeProvider","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.edc9d5c1.chunk.js","sourcesContent":["const reducer = (state = { alive: false}, action) => {\r\n    switch(action.type) {\r\n        case 'SET_NOTIFICATION':\r\n            return {\r\n                message: action.data.message,\r\n                type: action.data.type,\r\n                alive: true\r\n            }\r\n        case 'KILL_NOTIFICATION':\r\n           return { ...state, alive:false }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setNotification = (message, type) => {\r\n    return {\r\n        type: 'SET_NOTIFICATION',\r\n        data: {\r\n            type,\r\n            message,\r\n        }\r\n    }\r\n}\r\nexport const killNotification = () => {\r\n    return {\r\n        type: 'KILL_NOTIFICATION',\r\n        data: {}\r\n    }\r\n}\r\nexport default reducer;","import { killNotification } from '../reducers/notificationReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nconst Notification = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const notification = useSelector(state => state.notification)\r\n\r\n    const handleClose = () => {\r\n        dispatch(killNotification())\r\n    }\r\n    return (\r\n        <div>\r\n            <Snackbar open={notification.alive} autoHideDuration={5000} onClose={handleClose}>\r\n                <Alert severity={notification.type} variant=\"filled\">\r\n                    {notification.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\nexport default Notification","import { ChevronLeft } from '@material-ui/icons';\r\nimport { Drawer, Divider, List, ListItem, IconButton, Typography } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst Vetomenu = ({ menuOpen, setMenuOpen }) => {\r\n\r\n    const user = useSelector(state => state.user)\r\n    const notLogged = (!user.user)\r\n    return (\r\n        <Typography>\r\n            <Drawer\r\n                open={menuOpen}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n            >\r\n                <IconButton onClick={() => setMenuOpen(false)}>\r\n                    <ChevronLeft />\r\n                </IconButton>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button component={Link} to=\"/\" onClick={() => setMenuOpen(false)}>\r\n                        Etusivu\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n\r\n                <List>\r\n                    <ListItem disabled={notLogged} button component={Link} to=\"/peli\" onClick={() => setMenuOpen(false)}>\r\n                        Uusi peli\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem disabled={notLogged} button component={Link} to=\"/vanhat\" onClick={() => setMenuOpen(false)}>\r\n                        Vanhat pelit\r\n                    </ListItem>\r\n                    <ListItem disabled={notLogged} button component={Link} to=\"/stats\" onClick={() => setMenuOpen(false)}>\r\n                        Statistiikka\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem disabled={notLogged} button component={Link} to=\"/kaverit\" onClick={() => setMenuOpen(false)}>\r\n                        Kaverit\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem component={Link} to=\"/asetukset\" disabled={notLogged} button onClick={() => setMenuOpen(false)}>\r\n                        Asetukset\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/createUser\" onClick={() => setMenuOpen(false)}>\r\n                        Luo tunnus\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/login\" onClick={() => setMenuOpen(false)}>\r\n                        Kirjaudu sisään\r\n                    </ListItem>\r\n\r\n                </List>\r\n            </Drawer></Typography>\r\n    )\r\n}\r\nexport default Vetomenu;","import { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nconst YlaPalkki = ({ openMenu }) => {\r\n    return (\r\n        <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" onClick={openMenu}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\r\n            RagePutt\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      )\r\n}\r\nexport default YlaPalkki","import { gql } from '@apollo/client';\r\n\r\nexport const RESTORE_ACCOUNT = gql`\r\n    mutation restoreAccount( $email: String!) {\r\n        restoreAccount( email: $email )\r\n    }\r\n`\r\nexport const LOGIN = gql`\r\n    mutation login($user: String!, $password: String!) {\r\n        login(\r\n            user: $user\r\n            password: $password\r\n        ) {\r\n            value\r\n            user { user name }\r\n        }\r\n    }\r\n\r\n\r\n`\r\nexport const CHANGE_SETTINGS = gql`\r\n    mutation changeSettings($name: String, $password: String, $email: String) {\r\n        changeSettings(\r\n            name: $name,\r\n            password: $password,\r\n            email: $email\r\n        ) {\r\n            name\r\n            email\r\n        }\r\n    }\r\n`\r\nexport const END_GAME = gql`\r\n    mutation endGame ($id: String!) {\r\n        finishGame(\r\n            roundId: $id\r\n        )\r\n    }\r\n`\r\nexport const CREATE_GAME = gql`\r\n    mutation createGame ($pelaajat: [String]) {\r\n        createGame(\r\n            pelaajat: $pelaajat\r\n        )\r\n    }\r\n`\r\nexport const DELETE_GAME = gql`\r\n    mutation deleteGame ( $roundId: String!) {\r\n        deleteGame(\r\n            roundId: $roundId\r\n        )\r\n    }\r\n`\r\nexport const SET_SCORE = gql`\r\n    mutation setScore($roundId: String!, $round: ID!, $player: String!, $score: Int!) {\r\n        setScore(\r\n            roundId: $roundId\r\n            round: $round\r\n            player: $player\r\n            score: $score\r\n        ) {\r\n            finished\r\n            timestamp\r\n            players {\r\n                user { user }\r\n                tulokset\r\n            }\r\n        }\r\n    }\r\n`\r\nexport const CREATE_USER = gql`\r\n    mutation createUser($user: String!, $password: String!, $name: String, $email: String) {\r\n        createUser(\r\n            user: $user\r\n            password: $password\r\n            name: $name\r\n            email: $email\r\n        ) {\r\n            user\r\n        }\r\n    }\r\n`\r\nexport const ANSWER_FRIEND_REQUEST = gql`\r\n    mutation handleFriendRequest($friendId: String!, $answer: Boolean!) {\r\n        handleFriendRequest(\r\n            friendId: $friendId\r\n            action: $answer\r\n        )\r\n    }\r\n`\r\nexport const SEND_FRIEND_REQUEST = gql`\r\n    mutation sendFriendRequest($name: String!) {\r\n        sendFriendRequest(\r\n            fName: $name\r\n        )\r\n    }\r\n`","\r\nexport const laskePisteet = (tulokset) => {\r\n\r\n    let pisteet = 0\r\n    let dist = 10\r\n    for (var i = 0; i < tulokset.length; i++ ) {\r\n        if (tulokset[i] === null) return pisteet\r\n        pisteet += tulokset[i]*dist\r\n        dist = 5+tulokset[i]\r\n    }\r\n    return pisteet\r\n}\r\nexport const tulokset2ChartData = (tulokset = [], palautus = [\r\n        { dist: '5m', putteja: 0, puttejaSisaan: 0, prossa: 0 },\r\n        { dist: '6m', putteja: 0, puttejaSisaan: 0, prossa: 0 },\r\n        { dist: '7m', putteja: 0, puttejaSisaan: 0, prossa: 0 },\r\n        { dist: '8m', putteja: 0, puttejaSisaan: 0, prossa: 0},\r\n        { dist: '9m', putteja: 0, puttejaSisaan: 0, prossa: 0},\r\n        { dist: '10m', putteja: 0, puttejaSisaan: 0, prossa: 0 } ]) => {\r\n    \r\n    for (let i=0; i < tulokset.length; i++) {\r\n        if (tulokset[i] === null) return palautus\r\n        const etaisyys = (i !== 0) ? tulokset[i-1] : 5\r\n\r\n        palautus[etaisyys].putteja += 5\r\n        palautus[etaisyys].puttejaSisaan += tulokset[i]\r\n\r\n        palautus[etaisyys].prossa = palautus[etaisyys].puttejaSisaan / palautus[etaisyys].putteja * 100\r\n    }\r\n    return palautus\r\n}\r\nexport const timestamp2String = (ts) => {\r\n    let aika = new Date(0)\r\n    aika.setUTCMilliseconds(ts)\r\n    const tunti = aika.getHours()+aika.getTimezoneOffset()/60\r\n    const minsat = aika.getMinutes()\r\n    return aika.getDate() + \".\" + (aika.getMonth()+1) + \".\" + aika.getFullYear() + \" \" + \r\n        ((tunti < 10) ? '0'+tunti : tunti) + \":\" + \r\n        ( (aika.getMinutes() < 10) ? '0'+minsat : minsat)\r\n}","import { useMutation } from \"@apollo/client\"\r\nimport { CircularProgress, FormControlLabel, Radio, RadioGroup, Grid } from \"@material-ui/core\"\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core'\r\nimport { useState } from \"react\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { SET_SCORE } from \"../../graphql/mutations\"\r\n\r\nimport { setNotification } from \"../../reducers/notificationReducer\"\r\n\r\nimport { laskePisteet } from '../../utils/stuff'\r\n\r\nconst Player = ({ player, round }) => {\r\n\r\n    const roundData = useSelector(state => state.tulokset)\r\n    const dispatch = useDispatch()\r\n\r\n    const [loading, setLoading] = useState(null)\r\n\r\n    const [setScore] = useMutation(SET_SCORE, { variables: { roundId: roundData.roundId } })\r\n\r\n    const handleChange = (e) => {\r\n        setLoading(e.target.value)\r\n        setScore({\r\n            variables: {\r\n                roundId: roundData.roundId,\r\n                round: roundData.round,\r\n                player: player.user.user,\r\n                score: Number(e.target.value)\r\n            }\r\n        }).catch(e => {\r\n            dispatch(setNotification(e.message, 'error'))\r\n        }).finally(() => {\r\n            setLoading(null)\r\n            if (round > 0 && !player.tulokset[round - 1])\r\n                dispatch(setNotification('Kierroksen ' + round + ' tulos puuttuu', 'warning'))\r\n        })\r\n    }\r\n    const distance = (round > 0) ? 5 + player.tulokset[round - 1] : 10\r\n    const pisteet = laskePisteet(player.tulokset)\r\n    let putteja = player.tulokset[round]\r\n    if (isNaN(putteja)) putteja = null\r\n    return (\r\n        <Card className=\"tulos-kortti\" elevation={3}>\r\n            <CardHeader\r\n                title={player.user.name}\r\n                action={distance + 'm'}\r\n                subheader={pisteet + ' points'}\r\n            />\r\n            <CardContent style={{padding: '15px 0px'}}>\r\n                <RadioGroup row style={{ whiteSpace: 'nowrap' }} value={putteja} onChange={handleChange}>\r\n                    <Grid container>\r\n                        <RadioButtons loading={loading} />\r\n                    </Grid>\r\n                </RadioGroup>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\nconst RadioButtons = ({ loading }) => {\r\n    const palautus = []\r\n    var i\r\n    for (i = 0; i < 6; i++) {\r\n        if (loading && i === Number(loading)) {\r\n            palautus.push(\r\n                <CircularProgress />\r\n            )\r\n        }\r\n        else {\r\n            palautus.push(\r\n                <Grid item xs\r\n                    key={i}\r\n                >\r\n                    <FormControlLabel\r\n                        labelPlacement=\"top\"\r\n                        value={i}\r\n                        label={i}\r\n                        control={\r\n                            <Radio color=\"primary\" size=\"small\"\r\n                                style={{ padding: '0px' }}\r\n                            />}\r\n                    />\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n    return palautus;\r\n}\r\n\r\nexport default Player","import { gql } from '@apollo/client';\r\n\r\nexport const GET_ME = gql`\r\n    query getMe {\r\n        getMe{\r\n           name\r\n           user\r\n           email\r\n           friends { user name id }\r\n           friendRequests { user name id }\r\n        }\r\n    }\r\n`\r\nexport const GET_GAMES = gql`\r\n    query getGames {\r\n        getGames {\r\n            finished\r\n            timestamp\r\n            id\r\n            players{ tulokset user{user name}}\r\n        }\r\n    }\r\n`\r\nexport const GET_ROUND = gql`\r\n    query getRound($roundId: String!) {\r\n        getRound(\r\n            roundId: $roundId\r\n        ) {\r\n            finished\r\n            timestamp\r\n            id\r\n            players {\r\n                user { user name }\r\n                tulokset\r\n            }\r\n        }\r\n    }\r\n`","import { gql } from '@apollo/client';\r\n\r\nexport const CARD_CHANGED = gql`\r\nsubscription changedCard( $roundId: String!) {\r\n    changedCard( roundId: $roundId) {\r\n        data {\r\n            tulokset\r\n            user { user name }\r\n        }\r\n    }\r\n}\r\n`","import { Grid, IconButton, Typography } from '@material-ui/core'\r\nimport { ChevronLeft, ChevronRight } from '@material-ui/icons'\r\nimport { useDispatch } from 'react-redux'\r\nimport Player from './Player'\r\n\r\nimport { useSubscription, useApolloClient } from '@apollo/client'\r\n\r\nimport { GET_ROUND } from '../../graphql/queries'\r\nimport { CARD_CHANGED } from '../../graphql/subscriptions'\r\n\r\nimport { useEffect } from 'react'\r\n\r\nconst Tulosruutu = ({ kierrosData, tulokset }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const kierros = tulokset.round\r\n\r\n    const client = useApolloClient()\r\n    const pushed = useSubscription(CARD_CHANGED, { variables: { roundId: kierrosData.data.getRound.id } })\r\n\r\n    useEffect(() => {\r\n        if (!pushed.loading) {\r\n            const dataMuistissa = client.readQuery({ query: GET_ROUND, variables: { roundId: kierrosData.data.getRound.id } })\r\n\r\n            if (dataMuistissa !== null) {\r\n\r\n                client.writeQuery({\r\n                    query: GET_ROUND,\r\n                    variables: { roundId: kierrosData.data.getRound.id },\r\n                    data: {\r\n                        getRound: {\r\n                            ...dataMuistissa.getRound,\r\n                            players: dataMuistissa.getRound.players.map(p =>\r\n                                (p.user.user === pushed.data.changedCard.data.user.user)\r\n                                    ? pushed.data.changedCard.data\r\n                                    : p\r\n                            )\r\n                        }\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n    }, [pushed])\r\n\r\n    return (\r\n        <div>\r\n            <Grid container className=\"rundiValitsin\">\r\n                <Grid item><IconButton size=\"large\" onClick={() => dispatch({ type: 'DEC_ROUND' })}><ChevronLeft /></IconButton></Grid>\r\n                <Grid item component={'h2'}> {kierros + 1}/20</Grid>\r\n                <Grid item><IconButton onClick={() => dispatch({ type: 'INC_ROUND' })}><ChevronRight /></IconButton></Grid>\r\n            </Grid>\r\n            {kierrosData.data.getRound.players.map(p => <Player key={p.user.user + 'ppp'} player={p} round={kierros} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tulosruutu","import { useQuery } from \"@apollo/client\"\r\nimport { Button, Checkbox, Divider, FormControlLabel, InputLabel, List, ListItem, Modal, Select } from \"@material-ui/core\"\r\nimport { useState } from \"react\"\r\n\r\nimport { GET_ME } from \"../../graphql/queries\"\r\n\r\nconst NewGameModal = ({ open, setModal, handleNewGame }) => {\r\n\r\n    const mina = useQuery( GET_ME )\r\n    const [ pelaajat, setPelaajat ] = useState([])\r\n\r\n    if (mina.loading) {\r\n        return (\r\n            <h2>Loading stuff...</h2>\r\n        )\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        handleNewGame( pelaajat )\r\n    }\r\n    const handleClick = (pelaaja) => {\r\n        if (pelaajat.includes(pelaaja.id)) {\r\n            setPelaajat( pelaajat.filter( p => p !== pelaaja.id ))\r\n        } else {\r\n            setPelaajat( [...pelaajat, pelaaja.id] )\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setModal(false)}\r\n            >\r\n                <div className=\"newGameModal\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <h2>Uusi peli</h2>\r\n                        <div>\r\n                            <InputLabel htmlFor=\"age-native-simple\">Pelimoodi</InputLabel>\r\n                            <Select native>\r\n                                <option value={0}>Normaali</option>\r\n                            </Select>\r\n                        </div>\r\n                        <Divider />\r\n                        <div>\r\n                            <h3>Pelaajat</h3>\r\n                            <List>\r\n                            <ListItem>\r\n                                <FormControlLabel control={<Checkbox checked />} label=\"Minä\" />\r\n                            </ListItem>\r\n                            <Kaverivalinta kaverit={mina.data.getMe.friends} handleClick={handleClick} />\r\n                            </List>\r\n                            <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Aloita</Button>\r\n                            <Button fullWidth onClick={() => setModal(false)} variant=\"contained\" color=\"secondary\" style={{ marginTop: '5px' }}>Kansel</Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Kaverivalinta = ({ kaverit, handleClick }) => {\r\n    return (\r\n        kaverit.map(k => <ListItem key={k.id}><FormControlLabel control={<Checkbox onChange={() => handleClick(k)} />} label={k.user} /></ListItem>)\r\n    )\r\n}\r\n\r\nexport default NewGameModal","import { Paper } from '@material-ui/core'\r\nimport { ValueAxis, Chart, Title, BarSeries, ArgumentAxis } from '@devexpress/dx-react-chart-material-ui'\r\nimport { Animation } from '@devexpress/dx-react-chart'\r\n\r\nconst BarChart = ({ data, otsikko='', paperProps=null } ) => {\r\n    return (\r\n        <Paper {...paperProps}>\r\n            <Chart data={data} height='250'>\r\n                <Title text={otsikko} />\r\n                <ArgumentAxis />\r\n                <ValueAxis min={0} max={100} />\r\n                <BarSeries\r\n                    argumentField=\"dist\"\r\n                    valueField=\"prossa\"\r\n                />\r\n                <Animation />\r\n            </Chart>\r\n        </Paper>\r\n    )\r\n\r\n}\r\nexport default BarChart","import { tulokset2ChartData } from \"../../utils/stuff\"\r\n\r\nimport BarChart from '../../components/BarChart'\r\n\r\nconst PlayerStats = ({ player }) => {\r\n\r\n    const statsit = tulokset2ChartData(player.tulokset)\r\n    return (\r\n            <BarChart data={statsit} otsikko={player.user.name} paperProps={ {\r\n                elevation: 3,\r\n                style: { marginBottom: '5px' }\r\n            }} />\r\n    )\r\n}\r\nexport default PlayerStats","\r\nconst TabPanel = (props) => {\r\n  \r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        hidden={value !== index}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n            children\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  export default TabPanel\r\n  ","import { useMutation, useLazyQuery } from '@apollo/client'\r\nimport { Button, Divider, CircularProgress, Typography } from '@material-ui/core'\r\nimport { Tabs, Tab, Backdrop } from '@material-ui/core'\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Tulosruutu from './Tulosruutu'\r\nimport NewGameModal from './NewGameModal'\r\nimport PlayerStats from './PlayerStats'\r\nimport { Redirect } from 'react-router'\r\n\r\nimport TabPanel from '../../components/TabPanel'\r\n\r\nimport { GET_ROUND, GET_GAMES } from '../../graphql/queries'\r\nimport { CREATE_GAME, DELETE_GAME, END_GAME } from '../../graphql/mutations'\r\n\r\nimport { Container } from '@material-ui/core'\r\nimport { setNotification } from '../../reducers/notificationReducer'\r\n\r\nconst Peli = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [modalOpen, setModal] = useState(false)\r\n    const [tabValue, setTabValue] = useState(0)\r\n\r\n    const tulokset = useSelector(state => state.tulokset)\r\n    const user = useSelector(state => state.user)\r\n\r\n    const [haeRundi, kierrosData] = useLazyQuery(GET_ROUND)\r\n\r\n    const [uusiPeli] = useMutation(CREATE_GAME)\r\n    const [paataPeli] = useMutation(END_GAME)\r\n    const [poistaPeli] = useMutation(DELETE_GAME)\r\n    \r\n    useEffect( () => {\r\n        if (tulokset.roundId && kierrosData.roundId !== tulokset.roundId) {\r\n            try {\r\n                haeRundi({ variables: { roundId: tulokset.roundId } });\r\n            } catch (e) {\r\n                console.log('Virhe peliä hakiessa', e.message)\r\n            }\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [tulokset.roundId])\r\n    const handleNewGame = async (pelaajat) => {\r\n        try {\r\n            const res = await uusiPeli({ variables: { pelaajat: pelaajat }, refetchQueries: [{ query: GET_GAMES } ] })\r\n            dispatch({ type: 'SET_ID', data: { roundId: res.data.createGame } })\r\n            dispatch(setNotification('Uusi peli luotu', 'info'))\r\n        } catch (e) {\r\n            dispatch(setNotification('Virhe uuden pelin luonnissa', 'error'))\r\n            console.log(e.message)\r\n        }\r\n        setModal(false);\r\n    }\r\n    const handleDeleteGame = async () => {\r\n        try {\r\n            await poistaPeli({ variables: { roundId: tulokset.roundId }, refetchQueries: [{ query: GET_GAMES }] })\r\n            dispatch({ type: 'RESET_ROUND' })\r\n            dispatch(setNotification('Peli poistettu', 'success'))\r\n        } catch (e) {\r\n            dispatch(setNotification(`Virhe pelin poistamisessa`, 'error'))\r\n            console.log(e.message)\r\n        }\r\n    }\r\n    const handleEndGame = async () => {\r\n\r\n        try {\r\n            await paataPeli({ variables: { id: tulokset.roundId }, refetchQueries: [{ query: GET_GAMES }] })\r\n            dispatch(setNotification('Peli päätetty', 'warning'))\r\n        } catch (e) {\r\n            console.log('Virhe pelin päättämisessä. ' + e.message)\r\n        }\r\n        return (\r\n            <Redirect to=\"/pelit\" />\r\n        )\r\n\r\n    }\r\n    if (!user.user) {\r\n        return (\r\n            <Redirect to=\"/login\" />\r\n        )\r\n    }\r\n    if (kierrosData.loading) {\r\n        return (\r\n            <Backdrop open={true}>\r\n                <CircularProgress />\r\n            </Backdrop>\r\n\r\n        )\r\n    } \r\n    if (tulokset.roundId === null || !kierrosData.data) {\r\n        return (\r\n            <Container>\r\n                <Typography variant=\"h4\" gutterBottom>Pakko päästä puttaa</Typography>\r\n                <Typography paragraph>\r\n                    Ei aktiivista peliä käynnissä. Aloita joko uusi peli tai jatkaa vanhaa peliä.\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Vanhan pelin jatkaminen onnistuu aktivoimalla se 'Vanhat peli' -osiosta.\r\n                </Typography>\r\n                <Button onClick={() => setModal(true)} color=\"primary\" variant=\"contained\" size=\"large\" fullWidth>Aloita uusi peli</Button>\r\n\r\n                <NewGameModal open={modalOpen} setModal={setModal} handleNewGame={handleNewGame} />\r\n\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tabs\r\n                value={tabValue}\r\n                onChange={(event, uusi) => setTabValue(uusi)}\r\n                variant=\"fullWidth\"\r\n                style={{ backgroundColor: '#3f51b5', color: 'white' }}\r\n            >\r\n                <Tab label=\"Peli\" />\r\n                <Tab label=\"Asetukset\" />\r\n                <Tab label=\"Statsit\" />\r\n            </Tabs>\r\n\r\n            <Container>\r\n                <TabPanel value={tabValue} index={0}>\r\n                    <Tulosruutu kierrosData={kierrosData} tulokset={tulokset} />\r\n                </TabPanel>\r\n                <TabPanel value={tabValue} index={1}>\r\n\r\n                    <Typography variant=\"h5\" gutterBottom>Poistu pelistä</Typography>\r\n                    <Typography paragraph>\r\n                        Poistu päävalikkoon. Peli on tallennettu ja tulosten merkkaamista voi jatkaa.\r\n                    </Typography>\r\n                    <Button size=\"large\" onClick={() => dispatch({ type: 'RESET_ROUND' })} variant=\"contained\" color=\"primary\" fullWidth>Poistu pelistä</Button>\r\n\r\n                    <Divider style={{ margin: '15px 0px' }} />\r\n\r\n                    <Typography variant=\"h5\" gutterBottom>Päätä peli</Typography>\r\n                    <Typography paragraph>Peli päätetään. Tulosten kirjaaminen suljetaan. Tulokset lasketaan mukaan statistiikkoihin.</Typography>\r\n                    <Button onClick={handleEndGame} size=\"large\" variant=\"contained\" color=\"primary\" fullWidth>Päätä peli</Button>\r\n\r\n                    <Divider style={{ margin: '15px 0px' }} />\r\n\r\n                    <Typography variant=\"h5\" gutterBottom>Poista peli</Typography>\r\n                    <Typography paragraph>Peli poistetaan</Typography>\r\n                    <Button size=\"large\" onClick={handleDeleteGame} variant=\"contained\" color=\"primary\" fullWidth>Poista peli</Button>\r\n                </TabPanel>\r\n                <TabPanel value={tabValue} index={2}>\r\n                    {kierrosData.data.getRound.players.map(p => <PlayerStats player={p} key={'ps' + p.user.user} />)}\r\n                </TabPanel>\r\n            </Container>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Peli;","import { useQuery } from '@apollo/client'\r\nimport { ArgumentAxis, ValueAxis, LineSeries, Chart, Title } from '@devexpress/dx-react-chart-material-ui'\r\nimport { Backdrop, CircularProgress, Paper, Grid, Container } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { GET_GAMES } from '../../graphql/queries'\r\nimport { laskePisteet, tulokset2ChartData } from '../../utils/stuff'\r\nimport BarChart from '../../components/BarChart'\r\nimport { Animation } from '@devexpress/dx-react-chart'\r\n\r\n\r\nconst Statsit = () => {\r\n\r\n    const statsRawData = useQuery(GET_GAMES)\r\n    const user = useSelector(state => state.user)\r\n\r\n    if (statsRawData.loading) {\r\n        return (\r\n            <Backdrop open={true}>\r\n                <CircularProgress />\r\n            </Backdrop>\r\n        )\r\n    }\r\n    const statsData = statsRawData.data.getGames\r\n    let kaikkiPuttiProssat = tulokset2ChartData()\r\n    let kaikkiPisteet = []\r\n    let maxPisteet = 0\r\n    for (let i = 0; i < statsData.length; i++) {\r\n        \r\n        if (!statsData[i].finished) continue    // Ei lasketa keskeneräisiä pelejä mukaan\r\n\r\n        const player = statsData[i].players.find(p => p.user.user === user.user)\r\n        kaikkiPuttiProssat = tulokset2ChartData(player.tulokset, kaikkiPuttiProssat)\r\n        const pisteet = laskePisteet(player.tulokset)\r\n        if (pisteet > maxPisteet) maxPisteet = pisteet\r\n        kaikkiPisteet.push({ game: i, score: pisteet })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Paper>\r\n                <Grid>\r\n                    <Grid>\r\n                        Pelejä: {statsData.length}\r\n                    </Grid>\r\n                    <Grid>\r\n                        Paras tulos: {maxPisteet}\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <BarChart data={kaikkiPuttiProssat} otsikko=\"Puttiprossat\" />\r\n\r\n            <Chart data={kaikkiPisteet} height='200'>\r\n                <Title text=\"Pisteet\" />\r\n                <ArgumentAxis />\r\n                <ValueAxis />\r\n                <LineSeries\r\n                    argumentField=\"game\"\r\n                    valueField=\"score\"\r\n                />\r\n                <Animation />\r\n            </Chart>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Statsit","\r\nconst reducer = (state = {}, action ) => {\r\n    switch(action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                user: action.data.user,\r\n                name: action.data.name\r\n            }\r\n        case 'CLEAR_USER':\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setUser = (name, user) => {\r\n    return {\r\n        type: 'SET_USER',\r\n        data: {\r\n            user,\r\n            name\r\n            \r\n        }\r\n    }\r\n}\r\nexport const clearUser = () => {\r\n    return {\r\n        type: 'CLEAR_USER',\r\n        data: {}\r\n    }\r\n}\r\nexport default reducer","import { useState } from 'react'\r\nimport { Button, TextField, Grid, Backdrop, CircularProgress, Container, Typography, Divider } from '@material-ui/core'\r\nimport { useApolloClient, useMutation } from '@apollo/client'\r\nimport { LOGIN } from '../graphql/mutations'\r\nimport { setUser, clearUser } from '../reducers/userReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst LoginForm = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user);\r\n    const [loginProcess, setLoginProcess] = useState(false)\r\n    const [login] = useMutation(LOGIN);\r\n    const client = useApolloClient()\r\n\r\n    const handleLogout = async (e) => {\r\n        await client.clearStore()\r\n        window.localStorage.clear()\r\n        dispatch(clearUser());\r\n        dispatch({ type: 'RESET_ROUND' })\r\n    }\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault()\r\n        setLoginProcess(true);\r\n        login({ variables: { user: e.target.user.value, password: e.target.password.value } }).then(result => {\r\n            window.localStorage.setItem('rageToken', result.data.login.value)\r\n            console.log('Login data: ', result.data.login)\r\n            const sailo = setUser(result.data.login.user.name, result.data.login.user.user);\r\n            dispatch(sailo);\r\n            setLoginProcess(false);\r\n        }).catch(e => {\r\n            dispatch(setNotification('Väärä tunnus tai salasana', 'error'))\r\n            setLoginProcess(false);\r\n        })\r\n    }\r\n    if (user.user) {\r\n        return (\r\n            <Container>\r\n                <Typography variant=\"h4\" gutterBottom>Kirjautunut</Typography>\r\n                <Typography paragraph>Olet kirjautunut tunnuksella <b>{user.user}</b></Typography>\r\n                <Button onClick={handleLogout} variant=\"contained\" color=\"primary\">Kirjaudu ulos</Button>\r\n            </Container>\r\n        )\r\n    }\r\n    return (\r\n        <Container>\r\n            <Backdrop open={loginProcess}>\r\n                <CircularProgress />\r\n            </Backdrop>\r\n            <Typography variant=\"h4\" gutterBottom>Kirjaudu sisään</Typography>\r\n            <form onSubmit={handleLogin}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <TextField name=\"user\" label=\"Tunnus\" variant=\"outlined\" fullWidth />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField name=\"password\" label=\"Salasana\" variant=\"outlined\" type=\"password\" fullWidth />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\">Kirjaudu</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            <Divider />\r\n            <Typography variant=\"h6\">Unohtuiko salasana</Typography>\r\n            <Typography paragraph>\r\n                <Link to=\"/palautus\">Voi ei, unohdin salasanani</Link>\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { Button, TextField, Typography } from '@material-ui/core'\r\n\r\nconst FriendRequestForm = ({ handleSendFriendRequest }) => {\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\">Lähetä kaveripyyntö</Typography>\r\n            <form onSubmit={handleSendFriendRequest}>\r\n                <TextField label=\"Nimi\" variant=\"outlined\" fullWidth name=\"kaveri\" size=\"small\" />\r\n                <Button type=\"submit\" variant=\"contained\" fullWidth size=\"large\" color=\"primary\" style={{ marginTop: '5px' }}>Lähetä</Button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nexport default FriendRequestForm","import { IconButton, Paper, Typography, Button } from '@material-ui/core'\r\nimport { Cancel, Check } from '@material-ui/icons/'\r\n\r\nconst FriendRequests = ({ pyynnot, handleFriendRequest, refetchMe }) => {\r\n    if (pyynnot.length < 1) {\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h5\">Ei kaveripyyntöjä</Typography>\r\n                <Button variant=\"outlined\" fullWidth onClick={refetchMe}>Päivitä kaveripyynnöt</Button>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <h2>Kaveripyynnöt</h2>\r\n            {pyynnot.map(k => <KaveriKortti handleFriendRequest={handleFriendRequest} kaveri={k} key={k.id} />)}\r\n        </>\r\n    )\r\n}\r\nconst KaveriKortti = ({ kaveri, handleFriendRequest }) => {\r\n    return (\r\n        <Paper elevation={2} style={{ paddingLeft: '5px', display: 'inline-block', width: '100%' }}>\r\n            <div style={{ float: 'left', paddingTop: '10px', fontWeight: 'bold' }}>\r\n                {kaveri.user} ({kaveri.name})\r\n            </div>\r\n            <div style={{ float: 'right' }}>\r\n                <IconButton onClick={() => handleFriendRequest(kaveri.id, true)}>\r\n                    <Check style={{ color: 'green' }} />\r\n                </IconButton>\r\n                <IconButton onClick={() => handleFriendRequest(kaveri.id, false)}>\r\n                    <Cancel style={{ color: 'red' }} />\r\n                </IconButton>\r\n            </div>\r\n\r\n        </Paper>\r\n    )\r\n}\r\nexport default FriendRequests","\r\nimport { useQuery } from '@apollo/client'\r\nimport { useEffect, useState } from 'react'\r\nimport { GET_ME } from '../graphql/queries'\r\n\r\nconst useGetMe = () => {\r\n\r\n    const { loading, data, refetch } = useQuery(GET_ME)\r\n\r\n    const [ me, setMe ] = useState(null)\r\n\r\n    useEffect( () => {\r\n        if (!loading && data) {\r\n            setMe(data.getMe);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [data, loading])\r\n    return { me, loading, refetch };\r\n}\r\n\r\nexport default useGetMe;","import { useMutation, useQuery } from \"@apollo/client\"\r\nimport FriendRequestForm from \"./FriendRequestForm\"\r\nimport FriendRequests from \"./FriendRequests\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { setNotification } from '../../reducers/notificationReducer'\r\n\r\nimport { Container, Divider, Typography } from '@material-ui/core'\r\n\r\nimport { ANSWER_FRIEND_REQUEST, SEND_FRIEND_REQUEST } from \"../../graphql/mutations\"\r\nimport { GET_ME } from '../../graphql/queries';\r\n\r\nimport useGetMe from \"../../hooks/useGetMe\"\r\n\r\nconst Kaverit = () => {\r\n\r\n    const { me, loading, refetch } = useGetMe();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [answerFriendRequest] = useMutation(ANSWER_FRIEND_REQUEST, { refetchQueries: [{ query: GET_ME }] })\r\n    const [sendFriendRequest] = useMutation(SEND_FRIEND_REQUEST)\r\n\r\n    const handleSendFriendRequest = (e) => {\r\n        e.preventDefault()\r\n        sendFriendRequest({ variables: { name: e.target.kaveri.value } }).then(res => {\r\n            dispatch(setNotification('Kaveripyyntö lähetetty!', 'success'))\r\n        }).catch(e => {\r\n            dispatch(setNotification('Pyyntö epäonnistui: ' + e.message, 'error'))\r\n        })\r\n        e.target.kaveri.value = ''\r\n    }\r\n    const handleFriendRequest = (friendId, answer) => {\r\n        answerFriendRequest({ variables: { friendId, answer } }).then(res => {\r\n            dispatch(setNotification('Kaveripyyntö hyväksytty', 'success'))\r\n        }).catch(e => {\r\n            dispatch(setNotification('Tapahtui virhe: ' + e.message, 'error'))\r\n        })\r\n    }\r\n    const refetchMe = () => {\r\n        refetch();\r\n    }\r\n    if (loading || !me) {\r\n        return (<h2>Loading friends...</h2>)\r\n    }\r\n    console.log(me)\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h4\">Kaverit</Typography>\r\n            <KaveriLista kaverit={me.friends} />\r\n            <Divider />\r\n            <FriendRequests pyynnot={me.friendRequests} handleFriendRequest={handleFriendRequest} refetchMe={refetchMe} />\r\n            <Divider />\r\n            <FriendRequestForm handleSendFriendRequest={handleSendFriendRequest} />\r\n        </Container>\r\n    )\r\n\r\n}\r\nconst KaveriLista = ({ kaverit }) => {\r\n    if (kaverit.length < 1) {\r\n        return (<div>Ei kavereita :(</div>)\r\n    }\r\n    return (\r\n        <div> {kaverit.map(k => <li key={k.id}>{k.user} ({k.name})</li>)}</div>\r\n    )\r\n}\r\nexport default Kaverit","import { Typography, Grid, Paper } from \"@material-ui/core\"\r\n\r\nconst OmatTiedot = ({ me }) => {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h4\" gutterBottom>Tiedot</Typography>\r\n            <Typography variant=\"h6\">Tunnus</Typography>\r\n            <Typography>{me.user}</Typography>\r\n\r\n            <Typography variant=\"h6\">Näyttönimi</Typography>\r\n            <Typography>{me.name}</Typography>\r\n\r\n            <Typography variant=\"h6\">Sähköposti</Typography>\r\n            <Typography>{me.email}</Typography>\r\n        </div>\r\n    )\r\n}\r\nexport default OmatTiedot","import { Grid, Typography, TextField, Button } from '@material-ui/core'\r\nimport { useState } from 'react'\r\n\r\nconst SalasananVaihto = ({ vaihdaSalasana }) => {\r\n\r\n    \r\n    const [ pwHandler, setPwHandler ] = useState({\r\n        uusiPw: '',\r\n        uusiPw2: '',\r\n        ok: false\r\n    })\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        vaihdaSalasana( { password: pwHandler.uusiPw } )\r\n        setPwHandler( { uusiPw: '', uusiPw2: '', ok: false })\r\n    }\r\n    const handleChange = (e) => {\r\n        const updatedPwHandler = {...pwHandler}\r\n        updatedPwHandler[e.target.name] = e.target.value\r\n        if (updatedPwHandler.uusiPw === updatedPwHandler.uusiPw2 && updatedPwHandler.uusiPw !== '')\r\n            updatedPwHandler.ok = true\r\n        else updatedPwHandler.ok = false\r\n        setPwHandler(updatedPwHandler)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Typography variant=\"h5\" gutterBottom>Vaihda salasana</Typography>\r\n\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <TextField variant=\"outlined\" value={pwHandler.uusiPw} name=\"uusiPw\" label=\"Uusi salasana\" size=\"small\" type=\"password\" onChange={handleChange}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField variant=\"outlined\" value={pwHandler.uusiPw2} name=\"uusiPw2\" label=\"Uusi uudestaan\" size=\"small\" type=\"password\" onChange={handleChange} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={!pwHandler.ok}>Vaihda</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SalasananVaihto","import { Typography, TextField } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst VaihdaEmail = ({ handleChangeEmail }) => {\r\n\r\n    const [newEmail, setNewEmail ] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleChangeEmail({ email: newEmail })\r\n        setNewEmail('')\r\n    }\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Typography variant=\"h5\" label=\"email\">Vaihda email</Typography>\r\n            <TextField variant=\"outlined\" \r\n                name=\"email\" \r\n                value={newEmail} \r\n                placeholder=\"Uusi email\" \r\n                size=\"small\" \r\n                onChange={(e) => setNewEmail(e.target.value)}\r\n            />\r\n            &nbsp;<Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={!(validateEmail(newEmail))}>Vaihda</Button>\r\n        </form>\r\n    )\r\n\r\n}\r\nexport default VaihdaEmail;","import { Backdrop, CircularProgress, TextField, Button, Container, Typography, Divider, Switch, Grid, FormControlLabel, FormGroup } from \"@material-ui/core\"\r\nimport { useState } from \"react\";\r\n\r\nimport useGetMe from \"../../hooks/useGetMe\";\r\nimport OmatTiedot from \"./OmatTiedot\";\r\n\r\nimport SalasananVaihto from './SalasananVaihto'\r\nimport VaihdaEmail from './VaihdaEmail';\r\n\r\nimport { CHANGE_SETTINGS } from \"../../graphql/mutations\";\r\nimport { useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setNotification } from \"../../reducers/notificationReducer\";\r\n\r\nconst Asetukset = () => {\r\n\r\n    const { me, refetch } = useGetMe();\r\n    const dispatch = useDispatch()\r\n    const [changeSettings] = useMutation(CHANGE_SETTINGS)\r\n    const client = useApolloClient()\r\n\r\n    const handleChangeSettings = (newSettings) => {\r\n        const oldSettings = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n        }\r\n        changeSettings({ variables: { ...oldSettings, ...newSettings } }).then(res => {\r\n            dispatch(setNotification('Tietoja vaihdettu', 'success'))\r\n            refetch()\r\n        }).catch(e => {\r\n            console.log(e)\r\n            dispatch(setNotification(`Virhe! ${e.message}`, 'error'))\r\n        })\r\n    }\r\n    const handleCelarCache = async () => {\r\n        await client.clearStore()\r\n        dispatch( setNotification('Välimuisti tyhjennetty', 'info'))\r\n    }\r\n    if (me === null) {\r\n        return (\r\n            <Backdrop open={true}>\r\n                <CircularProgress />\r\n            </Backdrop>\r\n        )\r\n    }\r\n    return (\r\n        <Container>\r\n            <OmatTiedot me={me} />\r\n            <Divider />\r\n            <Grid container justifycontent=\"space-between\" direction=\"row\" alignItems=\"center\">\r\n                <Grid item xs={8} component={Typography}>\r\n                    Salli kavereiden nähdä tilastoni\r\n                </Grid>\r\n                <Grid item>\r\n                    <Switch color=\"primary\" checked={(me?.shareStatics)} />\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            <Divider />\r\n            <SalasananVaihto vaihdaSalasana={handleChangeSettings} />\r\n            <Divider />\r\n            <VaihdaNayttonimi handleChangeName={handleChangeSettings} />\r\n            <Divider />\r\n            <VaihdaEmail me={me} handleChangeEmail={handleChangeSettings} />\r\n            <Divider />\r\n            <Typography variant=\"h5\">Tyhjennä välimuisti</Typography>\r\n            <Typography paragraph>Jos tuntuu että asiat eivät näy oikein, voit yrittää tyhjentää välimuistin.</Typography>\r\n            <Button variant=\"outlined\" color=\"secondary\" fullWidth onClick={handleCelarCache}>Tyhjennä välimuisti</Button>\r\n        </Container>\r\n    )\r\n\r\n}\r\nconst VaihdaNayttonimi = ({ handleChangeName }) => {\r\n\r\n    const [newName, setNewName] = useState('')\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        handleChangeName({ name: newName })\r\n        setNewName('')\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Typography variant=\"h5\">Vaihda näyttönimi</Typography>\r\n            <TextField value={newName} variant=\"outlined\" label=\"Uusi nimi\" size=\"small\" onChange={(e) => setNewName(e.target.value)} />\r\n            &nbsp;<Button variant=\"contained\" type=\"submit\" disabled={(newName.length < 3)} color=\"primary\">Ok</Button>\r\n        </form>\r\n\r\n    )\r\n}\r\nexport default Asetukset","import { Button as Nbutton } from '@material-ui/core'\r\n\r\nconst Button = ({ children, variant=\"contained\", color=\"primary\", ...props }) => {\r\n    const style = {\r\n        margin: '7px 0px',\r\n    }\r\n    return <Nbutton {...props} variant={variant} color={color} style={style}>{children}</Nbutton>\r\n}\r\n\r\nexport default Button;","import { useMutation } from \"@apollo/client\"\r\nimport { TextField, Divider, Container, Typography, Grid } from \"@material-ui/core\"\r\nimport { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { setNotification } from \"../../reducers/notificationReducer\"\r\n\r\nimport { CREATE_USER } from '../../graphql/mutations'\r\n\r\nimport Button from '../../components/Button'\r\n\r\nconst CreateUserForm = () => {\r\n\r\n    const [createUser, cuData] = useMutation(CREATE_USER)\r\n    const dispatch = useDispatch()\r\n\r\n    const [errors, setErrors] = useState({ tunnus: false, password: false })\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const vars = {\r\n            user: e.target.user.value,\r\n            password: e.target.password.value,\r\n            name: e.target.name.value,\r\n            email: e.target.email.value\r\n        }\r\n        if (vars.user === '') {\r\n            setErrors({ ...errors, tunnus: true })\r\n        } else if (vars.password === '' || vars.password !== e.target.password2.value) {\r\n            setErrors({ ...errors, password: true })\r\n        }\r\n        else {\r\n            try {\r\n                await createUser({ variables: vars })\r\n                dispatch(setNotification('Tunnukset luotiin onnistuneesti', 'success'))\r\n            } catch (e) {\r\n                dispatch(setNotification('Virhe tunnusten luonnissa: ' + e.message, 'error'))\r\n            }\r\n        }\r\n    }\r\n    if (cuData.loading) {\r\n        return (<h2>Creating user...</h2>)\r\n    }\r\n    if (cuData.called && !cuData.error) {\r\n        return (<Redirect to=\"/login\" />)\r\n    }\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h4\">Luo tunnus</Typography>\r\n            <Typography variant=\"h5\">Perustiedot</Typography>\r\n            <form onSubmit={handleSubmit}>\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                    <Grid item>\r\n                        <TextField error={errors.tunnus} name=\"user\" label=\"Tunnus\" variant=\"outlined\" required />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField error={errors.password} name=\"password\" type=\"password\" label=\"Salasana\" variant=\"outlined\" required  />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField error={errors.password} name=\"password2\" label=\"Salasana uudestaan\" type=\"password\" variant=\"outlined\" required />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Divider />\r\n                <Typography variant=\"h5\" gutterBottom>Lisätiedot</Typography>\r\n                <Typography paragraph>Ei pakollisia. Sähköpostiosoitteen antaminen mahdollistaa tunnusten palauttamisen.</Typography>\r\n\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                    <Grid item>\r\n                    <TextField name=\"name\" label=\"Nimi\" variant=\"outlined\" />\r\n\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <TextField name=\"email\" label=\"Sähköposti\" variant=\"outlined\" fullWidth />\r\n\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <Button type=\"submit\" size=\"large\" variant=\"contained\"color=\"primary\">Luo tunnus</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreateUserForm","import { Button, Card, CardHeader, CardContent, Collapse } from '@material-ui/core'\r\nimport { laskePisteet, timestamp2String, tulokset2ChartData } from '../../utils/stuff'\r\nimport { useState } from 'react'\r\nimport { IconButton, Typography } from '@material-ui/core'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\n\r\nimport BarChart from '../../components/BarChart'\r\n\r\nconst Pelikortti = ({ peli, aktivoi, poista, user }) => {\r\n\r\n    let { tulokset } = peli.players.find(p => p.user.user === user)\r\n    const pisteet = laskePisteet(tulokset)\r\n\r\n    const [showStats, setShotStats] = useState(false)\r\n\r\n    if (tulokset.length === 0) {\r\n        tulokset = [0]\r\n    }\r\n    return (\r\n        <Card style={{ marginBottom: '5px' }} variant=\"outlined\">\r\n            <CardHeader\r\n                avatar= {\r\n                    (!peli.finished && <WarningIcon style={{color: 'orange'}}/>)\r\n                }\r\n                action={\r\n                    <IconButton onClick={() => setShotStats(!showStats)} size=\"small\">\r\n                        <ExpandMoreIcon />\r\n                    </IconButton>\r\n                }\r\n\r\n                title={ (showStats) ? pisteet : null}\r\n                subheader={ ((showStats) ? timestamp2String(peli.timestamp) : pisteet) }\r\n            />\r\n            <Collapse in={showStats} unmountOnExit timeout=\"auto\">\r\n                <CardContent style={{paddingTop: '0px'}}>\r\n                    <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={() => aktivoi(peli.id)}>Aktivoi</Button>&nbsp;                                 \r\n                    <Button size=\"small\" variant=\"outlined\" color=\"secondary\" onClick={() => poista(peli.id)}>Poista</Button>\r\n                    <Typography>\r\n                        Puttiprossa: { (tulokset.reduce((total, cur) => total+cur) / (tulokset.length*5) * 100).toFixed()}\r\n                    </Typography>\r\n                    <BarChart data={tulokset2ChartData(tulokset)} />\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    )\r\n\r\n}\r\nexport default Pelikortti","import { Button, Container, Dialog, Grid, Typography } from \"@material-ui/core\"\r\n\r\nconst YesNoModal = ({ open, \r\n    title = \"Oletko varma?\", \r\n    text = \"Aivan varma?\",\r\n    close=null,\r\n    onYesClick,\r\n    onNoClick=null\r\n}) => {\r\n    if (!open) return null\r\n    return (\r\n        <Dialog open onClick={close}>\r\n            <Container style={{ paddingBottom: '15px'}}>\r\n                <Typography variant=\"h4\" gutterBottom>{title}</Typography>\r\n                <Typography paragraph>{text}</Typography>\r\n                <Grid container style={{ flexGrow: 1, width: '100%', textAlign: 'center' }}>\r\n                    <Grid item xs={6} >\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={onYesClick}>Kyllä</Button>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={onNoClick}>Ei</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Dialog>\r\n    )\r\n}\r\nexport default YesNoModal","import { useMutation, useQuery } from \"@apollo/client\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { GET_GAMES } from \"../../graphql/queries\"\r\nimport { DELETE_GAME } from '../../graphql/mutations'\r\nimport { Backdrop, CircularProgress, Container, Typography } from '@material-ui/core'\r\nimport Pelikortti from \"./Pelikortti\"\r\n\r\nimport { setNotification } from '../../reducers/notificationReducer'\r\nimport { useState } from \"react\"\r\nimport YesNoModal from \"../../components/YesNoModal\"\r\n\r\nconst VanhatPelit = () => {\r\n\r\n    const getGames = useQuery(GET_GAMES)\r\n    const user = useSelector(state => state.user)\r\n    const dispatch = useDispatch()\r\n    const [poistaPeliId, setPoistaPeliId] = useState(null)\r\n    const [poistaPeli] = useMutation(DELETE_GAME)\r\n\r\n    const aktivoi = (g) => {\r\n        dispatch({ type: 'SET_ID', data: { roundId: g } })\r\n        dispatch(setNotification('Peli akitoivu, valitse \\'Uusi peli\\'', 'info'))\r\n    }\r\n    const handlePoistaPeli = async () => {\r\n        console.log('Poistetaan', poistaPeliId)\r\n        try {\r\n            poistaPeli({ variables: { roundId: poistaPeliId }, refetchQueries: [{ query: GET_GAMES }] })\r\n            dispatch( setNotification('Peli poistettu', 'success'))\r\n        } catch (e) {\r\n            dispatch( setNotification('Virhe pelin poistamisessa', 'error'))\r\n            console.log(e.message)\r\n        }\r\n    }\r\n    if (!user.user) {\r\n        return (\r\n            <Redirect to=\"/login\" />\r\n        )\r\n    }\r\n\r\n    if (getGames.loading) {\r\n        return (\r\n            <Backdrop open={true}>\r\n                <CircularProgress />\r\n            </Backdrop>\r\n        )\r\n    }\r\n    console.log(getGames)\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Typography variant=\"h5\" gutterBottom>Vanhat peli</Typography>\r\n                {getGames.data.getGames.map(g =>\r\n                    <Pelikortti user={user.user}\r\n                        aktivoi={aktivoi} poista={(roundId) => setPoistaPeliId(roundId)}\r\n                        peli={g} key={g.id}\r\n                    />)}\r\n            </Container>\r\n            <YesNoModal open={(poistaPeliId)}\r\n                title=\"Oletko varma?\"\r\n                text=\"Haluatko varmasti poistaa pelin?\"\r\n                close={() => setPoistaPeliId(false)}\r\n                onYesClick={handlePoistaPeli}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default VanhatPelit","const { makeStyles } = require(\"@material-ui/core\");\r\n\r\nconst useStyles = makeStyles( {\r\n    paper: {\r\n        padding: 5,\r\n        marginBottom: 50\r\n    },\r\n});\r\nexport default useStyles;","import { Container, Typography, Paper, Link } from '@material-ui/core'\r\nimport useStyles from '../../hooks/useStyles'\r\n\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport { useEffect } from 'react';\r\n\r\nconst Etusivu = () => {\r\n\r\n    const tyylit = useStyles()\r\n\r\n    useEffect(() => {\r\n        Aos.init({ duration: 2000 })\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Paper className={tyylit.paper} id=\"iso-naytto\">\r\n                <Typography variant=\"h4\">\r\n                    Onpas iso näyttö\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Tämä sovellus on suunniteltu käytettäväksi kännykän pikkuruiselta näytöltä.\r\n                </Typography>\r\n            </Paper>\r\n            <Paper className={tyylit.paper}>\r\n                <Typography variant=\"h4\">\r\n                    Mitä tämä on?\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Rageputt on Fullstackopen 2021 -kurssin harjoitustyön tulos. Fullstackopen on Helsingin yliopiston\r\n                    järjestämä kurssi jossa tutustutaan JavaScriptilla tapahtuvaan moderniin websovelluskehitykseen. Pääpaino on\r\n                    React-kirjaston avulla toteutettavissa single page -sovelluksissa, ja niitä tukevissa Node.js:llä toteutetuissa\r\n                    REST-rajapinnoissa.\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    <Link>fullstackopen.com</Link>\r\n                </Typography>\r\n            </Paper>\r\n            <Paper className={tyylit.paper} data-aos=\"fade-up\">\r\n                <Typography variant=\"h4\">\r\n                    Rageputt\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Sovelluksen idea on pitää kirjaa frisbeegolffin JYLY-puttipelin tuloksista. Tulokset tallentuvat palvelimelle\r\n                    reaaliaikaisesti.\r\n                </Typography>\r\n\r\n            </Paper>\r\n            <Paper className={tyylit.paper} data-aos=\"fade-up\">\r\n                <Typography variant=\"h4\">\r\n                    JYLY?!?\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    JYLY Putting game is a putt practice drill/game created by Markus Lindqvist\r\n                    (found by nickename JYLY in dgcr forums as well as frisbeegolf-forum). The drill\r\n                    emphasizes putting from various distances. The more putts you sink and the further\r\n                    you do it, more points you get. (copypaste)\r\n                </Typography>\r\n            </Paper>\r\n            <Paper className={tyylit.paper} data-aos=\"fade-up\">\r\n                <Typography variant=\"h4\">\r\n                    Kerro lisää\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Jotta voit käyttää sovellusta, tulee sinun luoda oma tunnus. Tämän jälkeen voit aloittaa\r\n                    armottoman puttaamisen. Myöhemmin kun on liian pimeää puttaamiselle, voit ihailla ihanaa\r\n                    diagrammidataa!\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Jos satut omistamaan ystäviä, voit lähettää heille kaveripyynnön ja lisätä heidät ystäviksesi.\r\n                    Tämän jälkeen voitte yhdessä tuumin puttailla toisianne.\r\n                </Typography>\r\n            </Paper>\r\n            <Paper className={tyylit.paper} data-aos=\"fade-up\">\r\n                <Typography variant=\"h4\">\r\n                    Vanhan pelin jatkaminen\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Jos haluat jatkaa vanhaa peliä, valitse 'vanhat pelit' -osiosta kyseinen peli ja paina aktivointinappia. Tämän\r\n                    jälkeen voit jatkaa tulosten kirjaamista 'uusi peli' -sivulla.\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Avoimen pelin tunnistaa oranssista kolmiosta.\r\n                </Typography>\r\n\r\n            </Paper>\r\n            <Paper className={tyylit.paper} data-aos=\"fade-up\">\r\n                <Typography variant=\"h4\">\r\n                    Pelin päättäminen\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Kun peli on päätetty peliasetukse sivulta, tulosten kirjaaminen estetään ja tulokset otetaan huomioon statistiikka-sivulla.\r\n                </Typography>\r\n\r\n            </Paper>\r\n            \r\n\r\n        </Container>\r\n\r\n    )\r\n}\r\nexport default Etusivu\r\n","import { useMutation } from \"@apollo/client\"\r\nimport { Container, Typography, TextField } from \"@material-ui/core\"\r\nimport { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { RESTORE_ACCOUNT } from \"../graphql/mutations\"\r\nimport Button from './Button'\r\n\r\nconst RestoreAccount = () => {\r\n    const [mailSent, setMailSent ] = useState(false)\r\n    const [ restoreAccount ] = useMutation( RESTORE_ACCOUNT )\r\n\r\n    const handleResetAccount = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            await restoreAccount( { variables: { email: e.target.email.value }} )\r\n            setMailSent(true)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        e.target.email.value = ''\r\n    }\r\n\r\n    if (mailSent) {\r\n        return (\r\n            <Container>\r\n                <Typography variant=\"h4\" gutterBottom>Salasana lähetetty</Typography>\r\n                <Typography paragraph>Kertakäyttöinen salasana on lähetetty sähköpostiisi, olettaen että annoit\r\n                oikean sähköpostiosoitteen.</Typography>\r\n                <Typography paragraph>Tarkista sähköpostisi, sen jälkeen <Link to=\"/login\">kirjaudu sisään</Link>.</Typography>\r\n            </Container>\r\n        )\r\n    }\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                Tunnuksen palautus\r\n            </Typography>\r\n            <Typography paragraph>\r\n                Kirjoita alla olevaan kenttään sähköpostiosoitteesi. Kertakäyttöinen salasana lähetetään antamaasi sähköpostiosoitteeseen.\r\n                Mikäli et koskaan liittänyt sähköpostiosoitetta tunnukseesi niin... tough luck.\r\n            </Typography>\r\n            <form onSubmit={handleResetAccount}>\r\n                <TextField label=\"Sähköpostiosoite\" name=\"email\" variant=\"outlined\" fullWidth />\r\n                <Button type=\"submit\">Palauta</Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\nexport default RestoreAccount","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom'\n\nimport Notification from './components/Notification'\nimport Vetomenu from './components/Vetomenu'\nimport YlaPalkki from './components/YlaPalkki';\n\nimport Peli from './pages/Peli';\nimport Statsit from './pages/Statsit'\nimport LoginForm from './components/LoginForm'\nimport Kaverit from './pages/Kaverit'\nimport Asetukset from './pages/Asetukset'\nimport CreateUserForm from './pages/CreateUser';\nimport VanhatPelit from './pages/VanhatPelit';\nimport Etusivu from './pages/Etusivu'\n\nimport { setUser } from './reducers/userReducer';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useGetMe from './hooks/useGetMe';\nimport RestoreAccount from './components/RestoreAccount';\n\n\nfunction App() {\n\n  const [menuOpen, setMenuOpen] = useState(false)\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n\n  const { me, loading } = useGetMe();\n\n  const openMenu = () => {\n    setMenuOpen(true)\n  }\n  useEffect(() => {\n      if (!loading && me != null && !user.user) {\n        dispatch( setUser( me.name, me.user ))\n      }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [me] )\n\n  return (\n    <div>\n\n      <YlaPalkki openMenu={openMenu} />\n      <Vetomenu menuOpen={menuOpen} setMenuOpen={setMenuOpen} />\n\n      <Notification />\n        <Switch>\n          <Route path=\"/kaverit\">\n            <Kaverit />\n          </Route>\n          <Route path=\"/login\" >\n            <LoginForm />\n          </Route>\n          <Route path=\"/vanhat\" >\n            <VanhatPelit />\n          </Route>\n          <Route path=\"/peli\">\n            <Peli />\n          </Route>\n          <Route path=\"/stats\">\n            <Statsit />\n          </Route>\n          <Route path=\"/createUser\">\n            <CreateUserForm />\n          </Route>\n          <Route path=\"/asetukset\">\n            <Asetukset />\n          </Route>\n          <Route path=\"/palautus\">\n            <RestoreAccount />\n          </Route>\n          <Route path=\"/\">\n           <Etusivu />\n          </Route>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { setContext } from 'apollo-link-context'\r\nimport { ApolloClient, HttpLink, InMemoryCache, split } from '@apollo/client'\r\n\r\nimport { getMainDefinition } from '@apollo/client/utilities';\r\nimport { WebSocketLink } from '@apollo/client/link/ws'\r\n\r\n\r\nlet ApolloUri = 'https://rageputt.herokuapp.com/graphql'\r\nif (process.env.NODE_ENV !== 'production') {\r\n  console.log('Development mode selected!')\r\n  ApolloUri = 'http://localhost:4000/graphql'\r\n}\r\n\r\nconst httpLink = new HttpLink({ uri: ApolloUri })\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('rageToken')\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `bearer ${token}` : null\r\n    }\r\n  }\r\n})\r\n\r\nconst socketLink = new WebSocketLink({\r\n  uri: (process.env.NODE_ENV !== 'production') ? 'ws://localhost:4000/graphql' : 'wss://rageputt.herokuapp.com/graphql',\r\n  options: {\r\n    reconnect: true\r\n  }\r\n})\r\n\r\nconst splitLink = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query)\r\n    return (\r\n      definition.kind === 'OperationDefinition' &&\r\n      definition.operation === 'subscription'\r\n    )\r\n  },\r\n  socketLink,\r\n  authLink.concat(httpLink)\r\n\r\n)\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: splitLink,\r\n  connectToDevTools: true,\r\n})\r\n\r\nexport default client;","\r\nconst reducer = (state = {round: 0, roundId: null}, action) => {\r\n    switch(action.type) {\r\n        case 'INC_ROUND':\r\n            if (state.round < 19)\r\n                return {...state, round: state.round + 1 }\r\n            else return state;\r\n        case 'DEC_ROUND':\r\n            if (state.round >= 1)\r\n                return {...state, round: state.round - 1 } \r\n            else return state;\r\n        case 'SET_ID':\r\n            return { ...state, roundId: action.data.roundId }\r\n        case 'INIT_ROUND':\r\n            return action.data;\r\n        case 'RESET_ROUND':\r\n            return { round: 0, roundId: null }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers, createStore } from 'redux';\r\nimport tuloksetReducer from '../reducers/tuloksetReducer'\r\nimport userReducer from '../reducers/userReducer'\r\nimport notificationReducer from '../reducers/notificationReducer'\r\n\r\nconst reducers = combineReducers({\r\n    tulokset: tuloksetReducer,\r\n    user: userReducer,\r\n    notification: notificationReducer\r\n})\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store\r\n","import { createMuiTheme } from \"@material-ui/core\"\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme( {\r\n    typography: {\r\n        fontFamily: 'Quicksand',\r\n        fontWeightLight: 300,\r\n        fontWeightMedium: 500,\r\n        fontWeightRegular: 400,\r\n        fontWeightBold: 700,\r\n        h3: {\r\n            marginBottom: 15,\r\n        },\r\n        h4: {\r\n            marginBottom: 15,\r\n        },\r\n        h5: {\r\n            marginBottom: 15\r\n        }\r\n    },\r\n    palette: {\r\n        secondary: red\r\n    }\r\n});\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport { ApolloProvider } from '@apollo/client'\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport client from './utils/apolloClient';\nimport store from './utils/store'\n\nimport theme from './utils/theme';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <Router>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </Router>\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n"],"sourceRoot":""}