{"version":3,"sources":["reducers/notificationReducer.js","components/Notification.js","hooks/useStyles.js","components/Vetomenu.js","components/YlaPalkki.js","graphql/fragments.js","graphql/mutations.js","utils/stuff.js","pages/Peli/Player.js","pages/Peli/Tulosruutu.js","graphql/queries.js","utils/apolloCacheUpdate.js","hooks/useGetMe.js","components/DropDown.js","pages/Peli/NewGameModal.js","components/BarChart.js","pages/Peli/PlayerStats.js","components/TabPanel.js","graphql/subscriptions.js","hooks/useGetRound.js","pages/Peli/index.js","hooks/useGetGames.js","pages/Statsit/index.js","reducers/userReducer.js","components/LoginForm.js","hooks/useIsUsernameAvailable.js","pages/Kaverit/FriendRequestForm.js","pages/Kaverit/FriendRequests.js","pages/Kaverit/KaveriLista.js","components/YesNoModal.js","pages/Kaverit/PoistaKaveri.js","pages/Kaverit/index.js","pages/Asetukset/OmatTiedot.js","pages/Asetukset/SalasananVaihto.js","pages/Asetukset/VaihdaEmail.js","pages/Asetukset/Kytkimet.js","pages/Asetukset/PoistaTunnukset.js","pages/Asetukset/index.js","components/Button.js","pages/CreateUser/index.js","pages/VanhatPelit/Pelikortti.js","pages/VanhatPelit/index.js","pages/Etusivu/index.js","components/RestoreAccount.js","components/DevPage.js","components/Page.js","components/PageContainer.js","assets/tkortti.jpg","assets/korti.png","pages/Ohje/index.js","components/Palaute.js","App.js","serviceWorkerRegistration.js","utils/apolloClient.js","reducers/tuloksetReducer.js","utils/store.js","utils/theme.js","index.js"],"names":["setNotification","message","type","title","data","reducer","state","alive","action","Notification","dispatch","useDispatch","notification","useSelector","Snackbar","open","autoHideDuration","onClose","transitionDuration","enter","exit","TransitionProps","direction","Alert","severity","variant","elevation","AlertTitle","useStyles","makeStyles","require","paper","padding","paddingLeft","marginBottom","borderRadius","listPaper","dialogi","divider","margin","Vetomenu","menuOpen","setMenuOpen","notLogged","user","tyylit","Drawer","anchor","IconButton","onClick","ChevronLeft","Divider","className","List","ListItem","button","component","Link","to","disabled","YlaPalkki","openMenu","historia","useHistory","useState","klik","setKlik","resetId","setResetId","console","log","AppBar","position","Toolbar","edge","Typography","style","flexGrow","clearTimeout","push","setTimeout","USER_FULL_INFO","gql","GAME_DETAILS","RESTORE_ACCOUNT","DELETE_ACCOUNT","LOGIN","CHANGE_SETTINGS","END_GAME","CREATE_GAME","DELETE_GAME","SET_SCORE","CREATE_USER","ANSWER_FRIEND_REQUEST","SEND_FRIEND_REQUEST","DELETE_FRIEND","laskePisteet","tulokset","pisteet","dist","i","length","tulokset2ChartData","palautus","putteja","puttejaSisaan","prossa","etaisyys","timestamp2String","ts","aika","Date","setUTCMilliseconds","tunti","getHours","getTimezoneOffset","minsat","getMinutes","getDate","getMonth","getFullYear","RadioButtons","loading","Number","CircularProgress","Grid","item","xs","FormControlLabel","labelPlacement","value","label","control","Radio","color","size","Player","player","round","roundData","setLoading","useMutation","variables","roundId","setScore","distance","isNaN","Card","CardHeader","name","subheader","titleTypographyProps","CardContent","RadioGroup","row","onChange","e","target","score","catch","finally","container","alignContent","Tulosruutu","kierrosData","kierros","ChevronRight","getRound","players","map","p","GET_ME","GET_GAMES","GET_USER_GAMES","GET_ROUND","IS_USERNAME_AVAILABLE","apolloCacheUpdate","client","query","dataKey","dataObject","writeQuery","useGetMe","useQuery","refetch","me","setMe","useApolloClient","useEffect","getMe","updateCache","updateData","ParseOptions","options","mappedOptions","Array","from","keys","k","get","o","DropDown","Select","native","defaultValue","KaveriCheckBox","kaveri","kaverit","setKaverit","Checkbox","includes","id","filter","concat","icon","PersonOutline","fontSize","checkedIcon","Person","NewGameModal","setModal","handleNewGame","Backdrop","Dialog","fullWidth","maxWidth","PaperProps","Container","FormGroup","checked","friends","f","justify","marginTop","BarChart","otsikko","paperStyle","tyyli","paperProps","Paper","height","text","min","max","argumentField","valueField","PlayerStats","statsit","TabPanel","props","children","index","other","hidden","CARD_CHANGED","useGetRound","setRoundData","useLazyQuery","getRaakaData","raakaData","pushed","useSubscription","called","refreshCache","changedCard","newData","Peli","modalOpen","tabValue","setTabValue","uusiPeli","paataPeli","poistaPeli","pelaajat","a","refetchQueries","res","createGame","handleDeleteGame","handleEndGame","gutterBottom","paragraph","Tabs","event","uusi","Tab","useGetGames","userId","setUserId","games","setGames","error","getGames","Statsit","kaikkiPuttiProssat","kaikkiPisteet","maxPisteet","finished","find","game","kaveritMap","Map","set","v","setUser","LoginForm","loginProcess","setLoginProcess","login","handleLogout","clearStore","window","localStorage","clear","handleLogin","preventDefault","password","then","result","setItem","sailo","onSubmit","spacing","TextField","useIsUsernameAvailable","fetchPolicy","getName","username","setUsername","available","setAvailable","timerId","setTimerId","isUsernameAvailable","setName","tid","FriendRequestForm","handleSendFriendRequest","helperText","marginLeft","KaveriKortti","handleFriendRequest","alignItems","Check","Cancel","FriendRequests","pyynnot","dense","Kaveri","KaveriLista","YesNoModal","close","onYesClick","onNoClick","paddingBottom","width","textAlign","PoistaKaveri","vahvistus","setVahvistus","setKaveri","mutaatti","handleKillFriend","kId","placeholder","Kaverit","answerFriendRequest","sendFriendRequest","friendId","answer","friendRequests","OmatTiedot","email","SalasananVaihto","vaihdaSalasana","uusiPw","uusiPw2","ok","pwHandler","setPwHandler","handleChange","updatedPwHandler","VaihdaEmail","handleChangeEmail","newEmail","setNewEmail","test","String","toLowerCase","Kytkimet","handleChangeSettings","paddingRight","Switch","shareStats","ignoreFriendRequests","PoistaTunnukset","setOpen","nimi","setNimi","deleteAccount","history","handleDeleteAccount","border","VaihdaNayttonimi","handleChangeName","newName","setNewName","Asetukset","changeSettings","newSettings","oldSettings","handleCelarCache","Button","marginRight","CreateUserForm","createUser","cuData","tunnus","errors","setErrors","handleSubmit","vars","password2","required","Pelikortti","peli","aktivoi","poista","showStats","setShotStats","avatar","timestamp","Collapse","in","unmountOnExit","timeout","paddingTop","reduce","total","cur","toFixed","VanhatPelit","poistaPeliId","setPoistaPeliId","g","handlePoistaPeli","Etusivu","Aos","init","duration","data-aos","RestoreAccount","mailSent","setMailSent","restoreAccount","handleResetAccount","DevPage","notify","Page","PageContainer","sivu","setSivu","handleClick","dir","display","justifyContent","Ohje","src","alt","tuloskortti","Palaute","setEmail","viesti","setViesti","rating","setRating","lahetaPalaute","msgSent","setMsgSent","Rating","multiline","rows","App","path","CreateUser","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","httpLink","HttpLink","uri","authLink","setContext","_","headers","token","getItem","authorization","socketLink","WebSocketLink","reconnect","splitLink","split","definition","getMainDefinition","kind","operation","ApolloClient","cache","InMemoryCache","link","connectToDevTools","reducers","combineReducers","tuloksetReducer","userReducer","notificationReducer","store","createStore","theme","createMuiTheme","typography","fontFamily","fontWeightLight","fontWeightMedium","fontWeightRegular","fontWeightBold","h3","h4","h5","palette","primary","main","secondary","red","success","info","overrides","MuiAlert","root","MuiCard","MuiListItem","MuiButton","MuiDivider","MuiAppBar","MuiTextField","backgroundColor","MuiOutlinedInput","MuiPaper","MuiContainer","ReactDOM","render","ApolloProvider","ThemeProvider","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e6d97d4d.chunk.js","sourcesContent":["const reducer = (state = { alive: false}, action) => {\r\n    switch(action.type) {\r\n        case 'SET_NOTIFICATION':\r\n            return {\r\n                message: action.data.message,\r\n                title: action.data.title,\r\n                type: action.data.type,\r\n                alive: true\r\n            }\r\n        case 'KILL_NOTIFICATION':\r\n           return { ...state, alive:false }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setNotification = (message, type, title='') => {\r\n    return {\r\n        type: 'SET_NOTIFICATION',\r\n        data: {\r\n            type,\r\n            message,\r\n            title,\r\n        }\r\n    }\r\n}\r\nexport const killNotification = () => {\r\n    return {\r\n        type: 'KILL_NOTIFICATION',\r\n        data: {}\r\n    }\r\n}\r\nexport default reducer;","import { killNotification } from '../reducers/notificationReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport { Alert, AlertTitle } from '@material-ui/lab/'\r\nimport { Slide, Zoom } from '@material-ui/core'\r\n\r\nconst Notification = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const notification = useSelector(state => state.notification)\r\n\r\n    const handleClose = () => {\r\n        dispatch(killNotification())\r\n    }\r\n    return (\r\n        <Snackbar\r\n            open={notification.alive}\r\n            autoHideDuration={5000}\r\n            onClose={handleClose}\r\n            transitionDuration={{ enter: 1000, exit: 2000 }}\r\n            TransitionProps={{ direction: 'left' }}\r\n        >\r\n            <Alert severity={notification.type} variant=\"filled\" elevation={3} >\r\n                {(notification.title !== '' && <AlertTitle>{notification.title}</AlertTitle>)}\r\n                {notification.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\nexport default Notification","const { makeStyles } = require(\"@material-ui/core\");\r\n\r\nconst useStyles = makeStyles( {\r\n    paper: {\r\n        padding: 5,\r\n        paddingLeft: 15,\r\n        marginBottom: 20,\r\n        borderRadius: 15\r\n    },\r\n    listPaper: {\r\n        borderRadius: 10,\r\n    },\r\n    dialogi: {\r\n        padding: 50,\r\n    },\r\n    divider: {\r\n        margin: 0,\r\n    }\r\n});\r\nexport default useStyles;","import { ChevronLeft } from '@material-ui/icons';\r\nimport { Drawer, Divider, List, ListItem, IconButton } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport useStyles from '../hooks/useStyles';\r\n\r\n\r\n\r\nconst Vetomenu = ({ menuOpen, setMenuOpen }) => {\r\n\r\n    const user = useSelector(state => state.user)\r\n    const notLogged = (!user.user)\r\n    const tyylit = useStyles()\r\n    return (\r\n            <Drawer\r\n                open={menuOpen}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n            >   \r\n                <IconButton onClick={() => setMenuOpen(false)}>\r\n                    <ChevronLeft />\r\n                </IconButton>\r\n                <Divider className={tyylit.divider}/>\r\n                <List>\r\n                    <ListItem button component={Link} to=\"/\" onClick={() => setMenuOpen(false)}>\r\n                        Etusivu\r\n                    </ListItem>\r\n                <Divider className={tyylit.divider} />\r\n\r\n                    <ListItem disabled={notLogged} button component={Link} to=\"/peli\" onClick={() => setMenuOpen(false)}>\r\n                        Uusi peli\r\n                    </ListItem>\r\n                <Divider className={tyylit.divider} />\r\n                    <ListItem disabled={notLogged} button component={Link} to=\"/vanhat\" onClick={() => setMenuOpen(false)}>\r\n                        Vanhat pelit\r\n                    </ListItem>\r\n                    <ListItem disabled={notLogged} button component={Link} to=\"/stats\" onClick={() => setMenuOpen(false)}>\r\n                        Statistiikka\r\n                    </ListItem>\r\n                <Divider className={tyylit.divider} />\r\n                    <ListItem disabled={notLogged} button component={Link} to=\"/kaverit\" onClick={() => setMenuOpen(false)}>\r\n                        Kaverit\r\n                    </ListItem>\r\n                <Divider className={tyylit.divider} />\r\n                    <ListItem component={Link} to=\"/asetukset\" disabled={notLogged} button onClick={() => setMenuOpen(false)}>\r\n                        Asetukset\r\n                    </ListItem>\r\n                    <ListItem component={Link} to=\"/ohje\" button onClick={() => setMenuOpen(false)}>\r\n                        Ohje\r\n                    </ListItem>\r\n                    <ListItem component={Link} to=\"/palaute\" button onClick={() => setMenuOpen(false)}>\r\n                        Palaute\r\n                    </ListItem>\r\n\r\n                    <Divider className={tyylit.divider} />\r\n\r\n                    <ListItem button component={Link} to=\"/createUser\" onClick={() => setMenuOpen(false)}>\r\n                        Luo tunnus\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/login\" onClick={() => setMenuOpen(false)}>\r\n                        Kirjaudu sisään\r\n                    </ListItem>\r\n\r\n                </List>\r\n            </Drawer>\r\n    )\r\n}\r\nexport default Vetomenu;","import { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport { useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst YlaPalkki = ({ openMenu }) => {\r\n\r\n  const historia = useHistory()\r\n  const [klik, setKlik] = useState(0)\r\n  const [resetId, setResetId] = useState(null)\r\n  const handleClick = () => {\r\n    setKlik(klik + 1)\r\n      if (resetId !== null) clearTimeout(resetId)\r\n    if (klik > 10) historia.push('/dev')\r\n    setResetId(\r\n      setTimeout(() => {\r\n        setKlik(0)\r\n      }, 500)\r\n    )\r\n  }\r\n  console.log(klik)\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" onClick={openMenu}>\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h5\" style={{ flexGrow: 1, marginBottom: 0 }} onClick={handleClick}>\r\n          RagePutt\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\nexport default YlaPalkki","import { gql } from \"@apollo/client\";\r\n\r\nexport const USER_FULL_INFO = gql`\r\n    fragment UserFullInfo on User {\r\n        name\r\n        user\r\n        email\r\n        shareStats\r\n        ignoreFriendRequests\r\n        friends { user name id }\r\n        friendRequests { user name id }\r\n        id\r\n    }\r\n`\r\nexport const GAME_DETAILS = gql`\r\n    fragment GameDetails on Game {\r\n        finished\r\n        timestamp\r\n        players { user { user name id } tulokset }\r\n        id\r\n    }\r\n`;","import { gql } from '@apollo/client';\r\nimport { USER_FULL_INFO } from './fragments';\r\n\r\nexport const RESTORE_ACCOUNT = gql`\r\n    mutation restoreAccount( $email: String!) {\r\n        restoreAccount( email: $email )\r\n    }\r\n`\r\nexport const DELETE_ACCOUNT = gql`\r\n    mutation deleteAccount {\r\n        deleteAccount\r\n    }\r\n`\r\nexport const LOGIN = gql`\r\n    mutation login($user: String!, $password: String!) {\r\n        login(\r\n            user: $user\r\n            password: $password\r\n        ) {\r\n            value\r\n            user { user name }\r\n        }\r\n    }\r\n\r\n\r\n`\r\nexport const CHANGE_SETTINGS = gql`\r\n    mutation changeSettings($name: String, $password: String, $email: String, $shareStats: Boolean, $ignoreFriendRequests: Boolean) {\r\n        changeSettings(\r\n            name: $name,\r\n            password: $password,\r\n            email: $email,\r\n            shareStats: $shareStats,\r\n            ignoreFriendRequests: $ignoreFriendRequests\r\n        ) {\r\n            name\r\n            user\r\n            email\r\n            shareStats\r\n            ignoreFriendRequests\r\n            friends { user name id }\r\n            friendRequests { user name id }\r\n        }\r\n    }\r\n`\r\nexport const END_GAME = gql`\r\n    mutation endGame ($id: String!) {\r\n        finishGame(\r\n            roundId: $id\r\n        )\r\n    }\r\n`\r\nexport const CREATE_GAME = gql`\r\n    mutation createGame ($pelaajat: [String]) {\r\n        createGame(\r\n            pelaajat: $pelaajat\r\n        )\r\n    }\r\n`\r\nexport const DELETE_GAME = gql`\r\n    mutation deleteGame ( $roundId: String!) {\r\n        deleteGame(\r\n            roundId: $roundId\r\n        )\r\n    }\r\n`\r\nexport const SET_SCORE = gql`\r\n    mutation setScore($roundId: String!, $round: ID!, $player: String!, $score: Int!) {\r\n        setScore(\r\n            roundId: $roundId\r\n            round: $round\r\n            player: $player\r\n            score: $score\r\n        ) {\r\n            finished\r\n            timestamp\r\n            players {\r\n                user { user }\r\n                tulokset\r\n            }\r\n        }\r\n    }\r\n`\r\nexport const CREATE_USER = gql`\r\n    mutation createUser($user: String!, $password: String!, $name: String, $email: String) {\r\n        createUser(\r\n            user: $user\r\n            password: $password\r\n            name: $name\r\n            email: $email\r\n        ) {\r\n            user\r\n        }\r\n    }\r\n`\r\nexport const ANSWER_FRIEND_REQUEST = gql`\r\n    mutation handleFriendRequest($friendId: String!, $answer: Boolean!) {\r\n        handleFriendRequest(\r\n            friendId: $friendId\r\n            action: $answer\r\n        ) {\r\n            ...UserFullInfo\r\n        }\r\n    }${USER_FULL_INFO}\r\n`\r\nexport const SEND_FRIEND_REQUEST = gql`\r\n    mutation sendFriendRequest($name: String!) {\r\n        sendFriendRequest(\r\n            fName: $name\r\n        )\r\n    }\r\n`\r\nexport const DELETE_FRIEND = gql`\r\n    mutation deleteFriend( $userId: ID! ) {\r\n        deleteFriend( userId: $userId ) {\r\n            ...userFullInfo\r\n        }\r\n    }${USER_FULL_INFO}\r\n`","\r\nexport const laskePisteet = (tulokset) => {\r\n\r\n    let pisteet = 0\r\n    let dist = 10\r\n    for (var i = 0; i < tulokset.length; i++ ) {\r\n        if (tulokset[i] === null) return pisteet\r\n        pisteet += tulokset[i]*dist\r\n        dist = 5+tulokset[i]\r\n    }\r\n    return pisteet\r\n}\r\nexport const tulokset2ChartData = (tulokset = [], palautus = [\r\n        { dist: '5m', putteja: 0, puttejaSisaan: 0, prossa: 0 },\r\n        { dist: '6m', putteja: 0, puttejaSisaan: 0, prossa: 0 },\r\n        { dist: '7m', putteja: 0, puttejaSisaan: 0, prossa: 0 },\r\n        { dist: '8m', putteja: 0, puttejaSisaan: 0, prossa: 0},\r\n        { dist: '9m', putteja: 0, puttejaSisaan: 0, prossa: 0},\r\n        { dist: '10m', putteja: 0, puttejaSisaan: 0, prossa: 0 } ]) => {\r\n    \r\n    for (let i=0; i < tulokset.length; i++) {\r\n        if (tulokset[i] === null) return palautus\r\n        const etaisyys = (i !== 0) ? tulokset[i-1] : 5\r\n\r\n        palautus[etaisyys].putteja += 5\r\n        palautus[etaisyys].puttejaSisaan += tulokset[i]\r\n\r\n        palautus[etaisyys].prossa = palautus[etaisyys].puttejaSisaan / palautus[etaisyys].putteja * 100\r\n    }\r\n    return palautus\r\n}\r\nexport const timestamp2String = (ts) => {\r\n    let aika = new Date(0)\r\n    aika.setUTCMilliseconds(ts)\r\n    const tunti = aika.getHours()+aika.getTimezoneOffset()/60\r\n    const minsat = aika.getMinutes()\r\n    return aika.getDate() + \".\" + (aika.getMonth()+1) + \".\" + aika.getFullYear() + \" \" + \r\n        ((tunti < 10) ? '0'+tunti : tunti) + \":\" + \r\n        ( (aika.getMinutes() < 10) ? '0'+minsat : minsat)\r\n}","import { useMutation } from \"@apollo/client\"\r\nimport { CircularProgress, FormControlLabel, Radio, RadioGroup, Grid } from \"@material-ui/core\"\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core'\r\nimport { useState } from \"react\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { SET_SCORE } from \"../../graphql/mutations\"\r\n\r\nimport { setNotification } from \"../../reducers/notificationReducer\"\r\n\r\nimport { laskePisteet } from '../../utils/stuff'\r\n\r\nconst Player = ({ player, round }) => {\r\n\r\n    const roundData = useSelector(state => state.tulokset)\r\n    const dispatch = useDispatch()\r\n\r\n    const [loading, setLoading] = useState(null)\r\n\r\n    const [setScore] = useMutation(SET_SCORE, { variables: { roundId: roundData.roundId } })\r\n\r\n    const handleChange = (e) => {\r\n        setLoading(e.target.value)\r\n        setScore({\r\n            variables: {\r\n                roundId: roundData.roundId,\r\n                round: roundData.round,\r\n                player: player.user.user,\r\n                score: Number(e.target.value)\r\n            }\r\n        }).catch(e => {\r\n            dispatch(setNotification(e.message, 'error'))\r\n        }).finally(() => {\r\n            setLoading(null)\r\n            if (round > 0 && isNaN(player.tulokset[round - 1]))\r\n                dispatch(setNotification('Kierroksen ' + round + ' tulos puuttuu', 'warning'))\r\n        })\r\n    }\r\n    const distance = (round > 0) ? 5 + player.tulokset[round - 1] : 10\r\n    const pisteet = laskePisteet(player.tulokset)\r\n    let putteja = player.tulokset[round]\r\n    if (isNaN(putteja)) putteja = null\r\n    return (\r\n        <Card className=\"tulos-kortti\" elevation={3}>\r\n            <CardHeader\r\n                title={player.user.name}\r\n                action={distance + 'm'}\r\n                subheader={pisteet + ' points'}\r\n                titleTypographyProps={{ style: { margin: 0}} }\r\n                //subheaderTypographyProps={{ style: { margin: 0 }}}\r\n            />\r\n            <CardContent style={{padding: '15px 0px'}}>\r\n                <RadioGroup row value={putteja} onChange={handleChange}>\r\n                    <Grid container alignContent='space-between'>\r\n                        <RadioButtons loading={loading} />\r\n                    </Grid>\r\n                </RadioGroup>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\nconst RadioButtons = ({ loading }) => {\r\n    const palautus = []\r\n    var i\r\n    for (i = 0; i < 6; i++) {\r\n        if (loading && i === Number(loading)) {\r\n            palautus.push(\r\n                <CircularProgress />\r\n            )\r\n        }\r\n        else {\r\n            palautus.push(\r\n                <Grid item xs={2}\r\n                    key={i}\r\n                >\r\n                    <FormControlLabel\r\n                        labelPlacement=\"top\"\r\n                        value={i}\r\n                        label={i}\r\n                        control={\r\n                            <Radio color=\"primary\" size=\"small\"\r\n                                style={{ padding: '0px' }}\r\n                            />}\r\n                    />\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n    return palautus;\r\n}\r\n\r\nexport default Player","import { Grid, IconButton } from '@material-ui/core'\r\nimport { ChevronLeft, ChevronRight } from '@material-ui/icons'\r\nimport { useDispatch } from 'react-redux'\r\nimport Player from './Player'\r\n\r\nconst Tulosruutu = ({ kierrosData, tulokset }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const kierros = tulokset.round\r\n\r\n    return (\r\n        <div>\r\n            <Grid container className=\"rundiValitsin\">\r\n                <Grid item><IconButton onClick={() => dispatch({ type: 'DEC_ROUND' })}><ChevronLeft /></IconButton></Grid>\r\n                <Grid item component={'h2'}> {kierros + 1}/20</Grid>\r\n                <Grid item><IconButton onClick={() => dispatch({ type: 'INC_ROUND' })}><ChevronRight /></IconButton></Grid>\r\n            </Grid>\r\n            {kierrosData.data.getRound.players.map(p => <Player key={p.user.user + 'ppp'} player={p} round={kierros} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tulosruutu","import { gql } from '@apollo/client';\r\nimport { USER_FULL_INFO, GAME_DETAILS } from './fragments';\r\n\r\nexport const GET_ME = gql`\r\n    query getMe {\r\n        getMe{\r\n           ...UserFullInfo\r\n        }\r\n    } ${USER_FULL_INFO}\r\n`\r\nexport const GET_GAMES = gql`\r\n    query getGames {\r\n        getGames {\r\n           ...GameDetails\r\n        }\r\n    } ${GAME_DETAILS}\r\n`\r\nexport const GET_USER_GAMES = gql`\r\n    query getGames( $userId: ID ) {\r\n        getGames( userId: $userId ) {\r\n            ...GameDetails\r\n        }\r\n    } ${GAME_DETAILS}\r\n`\r\nexport const GET_ROUND = gql`\r\n    query getRound($roundId: String!) {\r\n        getRound(\r\n            roundId: $roundId\r\n        ) {\r\n            finished\r\n            timestamp\r\n            id\r\n            players {\r\n                user { user name }\r\n                tulokset\r\n            }\r\n        }\r\n    }\r\n`\r\nexport const IS_USERNAME_AVAILABLE = gql`\r\n    query isUsernameAvailable( $user: String! ) {\r\n        isUsernameAvailable( user: $user)\r\n    }\r\n`","\r\nexport const apolloCacheUpdate = (client, query, data, dataKey, variables=null) => {\r\n    const dataObject = {\r\n        query,\r\n        variables,\r\n        data: {}\r\n    }\r\n    dataObject.data[dataKey] = data\r\n    client.writeQuery( dataObject )\r\n}\r\n","\r\nimport { useApolloClient, useQuery } from '@apollo/client'\r\nimport { useEffect, useState } from 'react'\r\nimport { GET_ME } from '../graphql/queries'\r\nimport { apolloCacheUpdate } from '../utils/apolloCacheUpdate'\r\n\r\nconst useGetMe = () => {\r\n\r\n    const { loading, data, refetch } = useQuery(GET_ME)\r\n\r\n    const [ me, setMe ] = useState(null)\r\n    const client = useApolloClient()\r\n\r\n    useEffect( () => {\r\n        if (!loading && data) {\r\n            setMe(data.getMe);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [data, loading])\r\n    const updateCache = (updateData) => {\r\n        apolloCacheUpdate(client, GET_ME, updateData, 'getMe')\r\n    }\r\n    return { me, loading, refetch, updateCache };\r\n}\r\n\r\nexport default useGetMe;","import { Select } from \"@material-ui/core\"\r\n\r\nconst DropDown = ( { options, variant=\"outlined\", mappedOptions=false, onChange }) => {\r\n\r\n    return (\r\n        <Select\r\n            native\r\n            defaultValue={0}\r\n            variant={variant}\r\n            onChange={ (e) => onChange(e.target.value) }\r\n        >   \r\n            <ParseOptions options={options} mappedOptions={mappedOptions} />\r\n        </Select>\r\n    )\r\n}\r\nconst ParseOptions = ({ options, mappedOptions}) => {\r\n\r\n    if (mappedOptions === true){\r\n        return Array.from(options.keys()).map(k => <option key={k} value={options.get(k)}>{k}</option>)\r\n    }\r\n    return options.map(o => <option key={o}>{o}</option>)\r\n}\r\nexport default DropDown","import useGetMe from '../../hooks/useGetMe'\r\nimport { Dialog, Typography, Container, Backdrop, CircularProgress, FormControlLabel, Checkbox, Button, Grid, FormGroup } from '@material-ui/core'\r\nimport DropDown from '../../components/DropDown';\r\nimport { useState } from 'react';\r\n\r\nimport { Person, PersonOutline } from '@material-ui/icons'\r\n\r\nconst NewGameModal = ({ open, setModal, handleNewGame }) => {\r\n\r\n    const { me } = useGetMe();\r\n    const [kaverit, setKaverit] = useState([])\r\n\r\n    if (me === null) return (\r\n        <Backdrop open={true}>\r\n            <CircularProgress />\r\n        </Backdrop>\r\n    )\r\n    console.log(kaverit)\r\n    return (\r\n        <Dialog open={open} fullWidth maxWidth=\"xs\" PaperProps={ { style: { borderRadius: 20 }} } >\r\n            <Container>\r\n                    <Typography variant=\"h4\">Uusi peli</Typography>\r\n                    <Typography variant=\"h5\">Pelimoodi: <DropDown options={['Normaali']}></DropDown></Typography>\r\n                    <Typography variant=\"h5\">Valitse pelaajat</Typography>\r\n                    <FormGroup>\r\n                        <FormControlLabel control={<Checkbox checkedIcon={<Person fontSize=\"large\" />} checked={true} />} label=\"Minä\" />\r\n                        {me.friends.map(f => <KaveriCheckBox kaverit={kaverit} setKaverit={setKaverit} key={f.user} kaveri={f} />)}\r\n                    </FormGroup>\r\n                    <Grid container justify=\"space-around\" style={{ marginTop: 20 }}>\r\n                        <Grid item><Button color=\"primary\" variant=\"contained\" onClick={() => handleNewGame(kaverit)}>Aloita peli</Button></Grid>\r\n                        <Grid item><Button color=\"secondary\" variant=\"contained\" onClick={() => setModal(false)}>Peruuta</Button></Grid>\r\n                    </Grid>\r\n            </Container>\r\n        </Dialog>\r\n    )\r\n}\r\nconst KaveriCheckBox = ({ kaveri, kaverit, setKaverit }) => {\r\n    const handleChange = () => {\r\n        if (!kaverit.includes(kaveri.id)) setKaverit(kaverit.concat(kaveri.id))\r\n        else setKaverit(kaverit.filter(k => k !== kaveri.id))\r\n    }\r\n    return (\r\n        <FormControlLabel control={\r\n            <Checkbox\r\n                onChange={handleChange}\r\n                icon={<PersonOutline fontSize=\"large\" />}\r\n                checkedIcon={<Person fontSize=\"large\" color=\"primary\" />}\r\n            />} label={kaveri.name} />\r\n    )\r\n}\r\nexport default NewGameModal","import { Paper } from '@material-ui/core'\r\nimport { ValueAxis, Chart, Title, BarSeries, ArgumentAxis } from '@devexpress/dx-react-chart-material-ui'\r\nimport { Animation } from '@devexpress/dx-react-chart'\r\nimport useStyles from '../hooks/useStyles'\r\n\r\nconst BarChart = ({ data, otsikko='', paperStyle=false, paperProps=null } ) => {\r\n    const tyyli = useStyles()\r\n    return (\r\n        <Paper className={(paperStyle === true) ? tyyli.paper : null}>\r\n            <Chart data={data} height='250'>\r\n                <Title text={otsikko} />\r\n                <ArgumentAxis />\r\n                <ValueAxis min={0} max={100} />\r\n                <BarSeries\r\n                    argumentField=\"dist\"\r\n                    valueField=\"prossa\"\r\n                />\r\n                <Animation />\r\n            </Chart>\r\n        </Paper>\r\n    )\r\n\r\n}\r\nexport default BarChart","import { tulokset2ChartData } from \"../../utils/stuff\"\r\n\r\nimport BarChart from '../../components/BarChart'\r\n\r\nconst PlayerStats = ({ player }) => {\r\n\r\n    const statsit = tulokset2ChartData(player.tulokset)\r\n    return (\r\n            <BarChart data={statsit} otsikko={player.user.name} paperProps={ {\r\n                elevation: 3,\r\n                style: { marginBottom: '5px' }\r\n            }} />\r\n    )\r\n}\r\nexport default PlayerStats","\r\nconst TabPanel = (props) => {\r\n  \r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        hidden={value !== index}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n            children\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  export default TabPanel\r\n  ","import { gql } from '@apollo/client';\r\n\r\nexport const CARD_CHANGED = gql`\r\nsubscription changedCard( $roundId: String) {\r\n    changedCard( roundId: $roundId ) {\r\n        id\r\n        finished\r\n        timestamp\r\n        players {\r\n            user { user name id }\r\n            tulokset\r\n        }\r\n    }\r\n}\r\n`","import { useApolloClient, useLazyQuery, useSubscription } from \"@apollo/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { GET_ROUND } from \"../graphql/queries\";\r\nimport { CARD_CHANGED } from \"../graphql/subscriptions\";\r\nimport { apolloCacheUpdate } from \"../utils/apolloCacheUpdate\";\r\n\r\nconst useGetRound = (roundId) => {\r\n\r\n    const [roundData, setRoundData ] = useState(null) \r\n    const [getRaakaData, raakaData ] = useLazyQuery(GET_ROUND)\r\n    const client = useApolloClient()\r\n\r\n    const pushed = useSubscription ( CARD_CHANGED, { variables: { roundId } })\r\n    useEffect( () => {\r\n        if (roundId === null) return null\r\n        if (!raakaData.loading) {\r\n            if (!raakaData.called || raakaData.variables.roundId !== roundId) {\r\n                getRaakaData( { variables: { roundId }})\r\n            }\r\n            else {\r\n                setRoundData( raakaData )\r\n            }\r\n        }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [roundId, raakaData])\r\n    useEffect( () => {\r\n        if (!pushed.loading)\r\n            refreshCache(pushed.data.changedCard)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [pushed])\r\n\r\n    const refreshCache = (newData) => {\r\n        apolloCacheUpdate(client, GET_ROUND, newData, 'getRound', { roundId })\r\n    }\r\n\r\n    return roundData\r\n}\r\nexport default useGetRound;","import { useMutation, useLazyQuery } from '@apollo/client'\r\nimport { Button, Divider, CircularProgress, Typography } from '@material-ui/core'\r\nimport { Tabs, Tab, Backdrop } from '@material-ui/core'\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Tulosruutu from './Tulosruutu'\r\nimport NewGameModal from './NewGameModal'\r\nimport PlayerStats from './PlayerStats'\r\nimport { Redirect } from 'react-router'\r\n\r\nimport TabPanel from '../../components/TabPanel'\r\n\r\nimport { GET_ROUND, GET_GAMES } from '../../graphql/queries'\r\nimport { CREATE_GAME, DELETE_GAME, END_GAME } from '../../graphql/mutations'\r\n\r\nimport { Container } from '@material-ui/core'\r\nimport { setNotification } from '../../reducers/notificationReducer'\r\nimport useGetRound from '../../hooks/useGetRound'\r\n\r\nconst Peli = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [modalOpen, setModal] = useState(false)\r\n    const [tabValue, setTabValue] = useState(0)\r\n\r\n    const tulokset = useSelector(state => state.tulokset)\r\n    const user = useSelector(state => state.user)\r\n\r\n    const [uusiPeli] = useMutation(CREATE_GAME)\r\n    const [paataPeli] = useMutation(END_GAME)\r\n    const [poistaPeli] = useMutation(DELETE_GAME)\r\n    \r\n    const kierrosData = useGetRound( tulokset.roundId )\r\n\r\n    const handleNewGame = async (pelaajat) => {\r\n        try {\r\n            const res = await uusiPeli({ variables: { pelaajat: pelaajat }, refetchQueries: [{ query: GET_GAMES } ] })\r\n            dispatch({ type: 'SET_ID', data: { roundId: res.data.createGame } })\r\n            dispatch(setNotification('Uusi peli luotu', 'info'))\r\n        } catch (e) {\r\n            dispatch(setNotification('Virhe uuden pelin luonnissa', 'error'))\r\n            console.log(e.message)\r\n        }\r\n        setModal(false);\r\n    }\r\n    const handleDeleteGame = async () => {\r\n        try {\r\n            await poistaPeli({ variables: { roundId: tulokset.roundId }, refetchQueries: [{ query: GET_GAMES }] })\r\n            dispatch({ type: 'RESET_ROUND' })\r\n            dispatch(setNotification('Peli poistettu', 'success'))\r\n        } catch (e) {\r\n            dispatch(setNotification(`Virhe pelin poistamisessa`, 'error'))\r\n            console.log(e.message)\r\n        }\r\n    }\r\n    const handleEndGame = async () => {\r\n\r\n        try {\r\n            await paataPeli({ variables: { id: tulokset.roundId }, refetchQueries: [{ query: GET_GAMES }] })\r\n            dispatch(setNotification('Peli päätetty', 'warning'))\r\n        } catch (e) {\r\n            console.log('Virhe pelin päättämisessä. ' + e.message)\r\n        }\r\n        return (\r\n            <Redirect to=\"/pelit\" />\r\n        )\r\n\r\n    }\r\n    if (!user.user) {\r\n        return (\r\n            <Redirect to=\"/login\" />\r\n        )\r\n    }\r\n    \r\n    if (tulokset.roundId === null || kierrosData === null) {\r\n        return (\r\n            <Container>\r\n                <Typography variant=\"h4\" gutterBottom>Pakko päästä puttaa</Typography>\r\n                <Typography paragraph>\r\n                    Ei aktiivista peliä käynnissä. Aloita joko uusi peli tai jatkaa vanhaa peliä.\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Vanhan pelin jatkaminen onnistuu aktivoimalla se 'Vanhat peli' -osiosta.\r\n                </Typography>\r\n                <Button onClick={() => setModal(true)} color=\"primary\" variant=\"contained\" size=\"large\" fullWidth>Aloita uusi peli</Button>\r\n\r\n                <NewGameModal open={modalOpen} setModal={setModal} handleNewGame={handleNewGame} />\r\n\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tabs\r\n                value={tabValue}\r\n                onChange={(event, uusi) => setTabValue(uusi)}\r\n                variant=\"fullWidth\"\r\n            >\r\n                <Tab label=\"Peli\" />\r\n                <Tab label=\"Asetukset\" />\r\n                <Tab label=\"Statsit\" />\r\n            </Tabs>\r\n\r\n            <Container>\r\n                <TabPanel value={tabValue} index={0}>\r\n                    <Tulosruutu kierrosData={kierrosData} tulokset={tulokset} />\r\n                </TabPanel>\r\n                <TabPanel value={tabValue} index={1}>\r\n\r\n                    <Typography variant=\"h5\" gutterBottom>Poistu pelistä</Typography>\r\n                    <Typography paragraph>\r\n                        Poistu päävalikkoon. Peli on tallennettu ja tulosten merkkaamista voi jatkaa.\r\n                    </Typography>\r\n                    <Button size=\"large\" onClick={() => dispatch({ type: 'RESET_ROUND' })} variant=\"contained\" color=\"primary\" fullWidth>Poistu pelistä</Button>\r\n\r\n                    <Divider style={{ margin: '15px 0px' }} />\r\n\r\n                    <Typography variant=\"h5\" gutterBottom>Päätä peli</Typography>\r\n                    <Typography paragraph>Peli päätetään. Tulosten kirjaaminen suljetaan. Tulokset lasketaan mukaan statistiikkoihin.</Typography>\r\n                    <Button onClick={handleEndGame} size=\"large\" variant=\"contained\" color=\"primary\" fullWidth>Päätä peli</Button>\r\n\r\n                    <Divider style={{ margin: '15px 0px' }} />\r\n\r\n                    <Typography variant=\"h5\" gutterBottom>Poista peli</Typography>\r\n                    <Typography paragraph>Peli poistetaan</Typography>\r\n                    <Button size=\"large\" onClick={handleDeleteGame} variant=\"contained\" color=\"primary\" fullWidth>Poista peli</Button>\r\n                </TabPanel>\r\n                <TabPanel value={tabValue} index={2}>\r\n                    {kierrosData.data.getRound.players.map(p => <PlayerStats player={p} key={'ps' + p.user.user} />)}\r\n                </TabPanel>\r\n            </Container>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Peli;","import { useQuery } from \"@apollo/client\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { GET_USER_GAMES } from \"../graphql/queries\"\r\nimport { setNotification } from \"../reducers/notificationReducer\"\r\n\r\nconst useGetGames = (id = null) => {\r\n\r\n    const [userId, setUserId] = useState(id)\r\n    const dispatch = useDispatch();\r\n    const query = useQuery(GET_USER_GAMES, { variables: { userId } })\r\n    const [games, setGames] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (!query.loading) {\r\n            if (query.error) {\r\n                dispatch( setNotification('Käyttäjä on estänyt jakamisen', 'error'))\r\n            }\r\n            else { \r\n                setGames(query.data.getGames)\r\n            }\r\n        }\r\n    }, [query])\r\n    return { games, setUserId, userId };\r\n}\r\nexport default useGetGames;","import { ArgumentAxis, ValueAxis, LineSeries, Chart, Title } from '@devexpress/dx-react-chart-material-ui'\r\nimport { Backdrop, CircularProgress, Grid, Container, Typography, Paper } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { laskePisteet, tulokset2ChartData } from '../../utils/stuff'\r\nimport BarChart from '../../components/BarChart'\r\nimport { Animation } from '@devexpress/dx-react-chart'\r\nimport DropDown from '../../components/DropDown'\r\nimport useGetMe from '../../hooks/useGetMe'\r\nimport useGetGames from '../../hooks/useGetGames'\r\n\r\nconst Statsit = () => {\r\n\r\n    const { games, setUserId, userId } = useGetGames();\r\n    const user = useSelector(state => state.user)\r\n    const { me } = useGetMe()\r\n    if (games === null || me === null) {\r\n        return (\r\n            <Backdrop open={true}>\r\n                <CircularProgress />\r\n            </Backdrop>\r\n        )\r\n    }\r\n\r\n    let kaikkiPuttiProssat = tulokset2ChartData()\r\n    let kaikkiPisteet = []\r\n    let maxPisteet = 0\r\n    for (let i = 0; i < games.length; i++) {\r\n\r\n        if (!games[i].finished) continue    // Ei lasketa keskeneräisiä pelejä mukaan\r\n        console.log({ userId, user: user.id })\r\n        const player = games[i].players.find(p => p.user.id === (userId) ? userId : me.id )\r\n        kaikkiPuttiProssat = tulokset2ChartData(player.tulokset, kaikkiPuttiProssat)\r\n        const pisteet = laskePisteet(player.tulokset)\r\n        if (pisteet > maxPisteet) maxPisteet = pisteet\r\n        kaikkiPisteet.push({ game: i, score: pisteet })\r\n    }\r\n    const kaveritMap = new Map()\r\n    kaveritMap.set('Minä', me.id)\r\n    for (const kaveri of me.friends)\r\n        kaveritMap.set(kaveri.name, kaveri.id)\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h5\">\r\n                Pelaaja: <DropDown\r\n                    options={kaveritMap}\r\n                    mappedOptions={true}\r\n                    onChange={(v) => setUserId(v)}\r\n                />\r\n            </Typography>\r\n            <Grid container direction=\"column\">\r\n                <Grid item component={Typography}>\r\n                    Pelejä: {games.length}\r\n                </Grid>\r\n                <Grid item component={Typography}>\r\n                    Paras tulos: {maxPisteet}\r\n                </Grid>\r\n            </Grid>\r\n            <BarChart data={kaikkiPuttiProssat} otsikko=\"Puttiprossat\" paperStyle />\r\n            <Paper style={{ borderRadius: 15}}>\r\n                <Chart data={kaikkiPisteet} height='200'>\r\n                    <Title text=\"Pisteet\" />\r\n                    <ArgumentAxis />\r\n                    <ValueAxis />\r\n                    <LineSeries\r\n                        argumentField=\"game\"\r\n                        valueField=\"score\"\r\n                    />\r\n                    <Animation />\r\n                </Chart>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Statsit","\r\nconst reducer = (state = {}, action ) => {\r\n    switch(action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                user: action.data.user,\r\n                name: action.data.name\r\n            }\r\n        case 'CLEAR_USER':\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setUser = (name, user) => {\r\n    return {\r\n        type: 'SET_USER',\r\n        data: {\r\n            user,\r\n            name\r\n            \r\n        }\r\n    }\r\n}\r\nexport const clearUser = () => {\r\n    return {\r\n        type: 'CLEAR_USER',\r\n        data: {}\r\n    }\r\n}\r\nexport default reducer","import { useState } from 'react'\r\nimport { Button, TextField, Grid, Backdrop, CircularProgress, Container, Typography, Divider } from '@material-ui/core'\r\nimport { useApolloClient, useMutation } from '@apollo/client'\r\nimport { LOGIN } from '../graphql/mutations'\r\nimport { setUser, clearUser } from '../reducers/userReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst LoginForm = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user);\r\n    const [loginProcess, setLoginProcess] = useState(false)\r\n    const [login] = useMutation(LOGIN);\r\n    const client = useApolloClient()\r\n\r\n    const handleLogout = async (e) => {\r\n        await client.clearStore()\r\n        window.localStorage.clear()\r\n        dispatch(clearUser());\r\n        dispatch({ type: 'RESET_ROUND' })\r\n    }\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault()\r\n        setLoginProcess(true);\r\n        login({ variables: { user: e.target.user.value, password: e.target.password.value } }).then(result => {\r\n            window.localStorage.setItem('rageToken', result.data.login.value)\r\n            console.log('Login data: ', result.data.login)\r\n            const sailo = setUser(result.data.login.user.name, result.data.login.user.user);\r\n            dispatch(sailo);\r\n            setLoginProcess(false);\r\n        }).catch(e => {\r\n            dispatch(setNotification('Väärä tunnus tai salasana', 'error'))\r\n            setLoginProcess(false);\r\n        })\r\n    }\r\n    if (user.user) {\r\n        return (\r\n            <Container>\r\n                <Typography variant=\"h4\" gutterBottom>Kirjautunut</Typography>\r\n                <Typography paragraph>Olet kirjautunut tunnuksella <b>{user.user}</b></Typography>\r\n                <Button onClick={handleLogout} variant=\"contained\" color=\"primary\">Kirjaudu ulos</Button>\r\n            </Container>\r\n        )\r\n    }\r\n    return (\r\n        <Container>\r\n            <Backdrop open={loginProcess}>\r\n                <CircularProgress />\r\n            </Backdrop>\r\n            <Typography variant=\"h4\" gutterBottom>Kirjaudu sisään</Typography>\r\n            <form onSubmit={handleLogin}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <TextField name=\"user\" label=\"Tunnus\" variant=\"outlined\" fullWidth />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField name=\"password\" label=\"Salasana\" variant=\"outlined\" type=\"password\" fullWidth />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\">Kirjaudu</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            <Divider />\r\n            <Typography variant=\"h6\">Unohtuiko salasana</Typography>\r\n            <Typography paragraph>\r\n                <Link to=\"/palautus\">Voi ei, unohdin salasanani</Link>\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { useLazyQuery } from \"@apollo/client\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { IS_USERNAME_AVAILABLE } from \"../graphql/queries\"\r\n\r\nconst useIsUsernameAvailable = () => {\r\n    \r\n    const [ getName, { loading, data } ] = useLazyQuery(IS_USERNAME_AVAILABLE, { fetchPolicy: 'cache-and-network' })\r\n    const [ username, setUsername ] = useState('')\r\n    const [ available, setAvailable] = useState(null)\r\n    const [ timerId, setTimerId ] = useState(null)\r\n\r\n    useEffect( () => {\r\n        if (!loading && data) {\r\n            if (username !== '')\r\n                setAvailable( data.isUsernameAvailable )\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [data, loading])\r\n\r\n    const setName = (name) => {\r\n        setUsername(name)\r\n        if (name === '') setAvailable(null)\r\n        else setAvailable('loading')\r\n        \r\n        if (timerId !== null) clearTimeout(timerId)\r\n        \r\n        const tid = setTimeout( () => {\r\n            getName({ variables: { user: name }})\r\n        }, 1000)\r\n        setTimerId(tid)\r\n    }\r\n    return { username, setName, available }\r\n}\r\nexport default useIsUsernameAvailable","import { Button, CircularProgress, TextField, Typography } from '@material-ui/core'\r\nimport useIsUsernameAvailable from '../../hooks/useIsUsernameAvailable'\r\n\r\nconst FriendRequestForm = ({ handleSendFriendRequest }) => {\r\n\r\n    const { username, setName, available } = useIsUsernameAvailable()\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\">Lähetä kaveripyyntö</Typography>\r\n            <form onSubmit={handleSendFriendRequest}>\r\n                <TextField label=\"Nimi\" variant=\"outlined\" name=\"kaveri\" size=\"small\"\r\n                    style={{ color: 'green' }}\r\n                    value={username}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    error={(available === true)}\r\n                    helperText={(available === true) ? 'Nimeä ei löydy' : ''}\r\n                />\r\n                {(available === 'loading' && <span style={{ marginLeft: 10 }}><CircularProgress /></span>)}\r\n                <br /><Button disabled={(available !== false)} type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" style={{ marginTop: '5px' }}>Lähetä</Button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nexport default FriendRequestForm","import { IconButton, Paper, Typography, Grid, List, ListItem } from '@material-ui/core'\r\nimport { Cancel, Check } from '@material-ui/icons/'\r\nimport useStyles from '../../hooks/useStyles'\r\n\r\nconst FriendRequests = ({ pyynnot, handleFriendRequest }) => {\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\">Kaveripyynnöt</Typography>\r\n            <List dense={true}>\r\n                {pyynnot.map(k => <KaveriKortti handleFriendRequest={handleFriendRequest} kaveri={k} key={k.id} />)}\r\n            </List>\r\n        </>\r\n    )\r\n}\r\nconst KaveriKortti = ({ kaveri, handleFriendRequest }) => {\r\n    const tyylit = useStyles()\r\n    return (\r\n        <ListItem>\r\n            <Grid container component={Paper} elevation={3}  className={tyylit.listPaper} justify=\"space-between\" alignItems=\"center\">\r\n                <Grid item xs={8}>\r\n                    {kaveri.user} ({kaveri.name})\r\n                </Grid>\r\n                <Grid item>\r\n                    <IconButton onClick={() => handleFriendRequest(kaveri.id, true)}>\r\n                        <Check style={{ color: 'green' }} />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => handleFriendRequest(kaveri.id, false)}>\r\n                        <Cancel style={{ color: '#ff4040' }} />\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n        </ListItem>\r\n    )\r\n}\r\nexport default FriendRequests","import { Typography, Paper, List, ListItem, Fade } from \"@material-ui/core\"\r\nimport { useState } from \"react\"\r\n\r\nconst KaveriLista = ({ kaverit }) => {\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\">Sinulla on {kaverit.length} kaveria</Typography>\r\n            <List dense={true}>\r\n                {kaverit.map(k => <Kaveri key={k.user} kaveri={k} />)}\r\n            </List>\r\n        </>\r\n    )\r\n}\r\nconst Kaveri = ({ kaveri }) => {\r\n    return (\r\n        <ListItem>\r\n            <Paper elevation={3}>\r\n                <strong>{kaveri.name}</strong> ({kaveri.user})\r\n            </Paper>\r\n        </ListItem>\r\n    )\r\n}\r\nexport default KaveriLista","import { Button, Container, Dialog, Grid, Typography } from \"@material-ui/core\"\r\n\r\nconst YesNoModal = ({ open, \r\n    title = \"Oletko varma?\", \r\n    text = \"Aivan varma?\",\r\n    close=null,\r\n    onYesClick,\r\n    onNoClick=null\r\n}) => {\r\n    if (!open) return null\r\n    return (\r\n        <Dialog open onClick={close}>\r\n            <Container style={{ paddingBottom: '15px'}}>\r\n                <Typography variant=\"h4\" gutterBottom>{title}</Typography>\r\n                <Typography paragraph>{text}</Typography>\r\n                <Grid container style={{ flexGrow: 1, width: '100%', textAlign: 'center' }}>\r\n                    <Grid item xs={6} >\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={onYesClick}>Kyllä</Button>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={onNoClick}>Ei</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Dialog>\r\n    )\r\n}\r\nexport default YesNoModal","import { useMutation } from \"@apollo/client\";\r\nimport { Button, TextField, Typography } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport YesNoModal from \"../../components/YesNoModal\";\r\nimport { DELETE_FRIEND } from \"../../graphql/mutations\";\r\nimport { setNotification } from \"../../reducers/notificationReducer\";\r\n\r\nconst PoistaKaveri = ({me, refetch}) => {\r\n\r\n    const [vahvistus, setVahvistus] = useState(false);\r\n    const [kaveri, setKaveri] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const [ mutaatti ] = useMutation(DELETE_FRIEND)\r\n\r\n    const handleKillFriend = async () => {\r\n        const kId = me.friends.find(k => k.user === kaveri)\r\n        if (!kId) {\r\n            dispatch( setNotification('Kaveri ei ole listoillasi', 'error', 'Does not compute'))\r\n        } else {\r\n            console.log('Kill ' + kId.id)\r\n            try {\r\n                await mutaatti( { variables: { userId: kId.id }})\r\n                dispatch( setNotification('Huono ystävä poistettu', 'success', 'Kaveri poistettu'))\r\n                await refetch();\r\n            } catch (e) {\r\n                dispatch( setNotification('Palvelin palautti virheen', 'error', 'Virhe kaverin poistossa'))\r\n            }\r\n        }\r\n        setVahvistus(false)\r\n        setKaveri('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Typography variant=\"h5\">Poista kaveri</Typography>\r\n        <TextField variant=\"outlined\" value={kaveri} onChange={(e) => setKaveri(e.target.value)} size=\"small\" placeholder=\"Kaverin tunnus...\"/>&nbsp;\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => setVahvistus(true)}>Poista</Button>\r\n        <YesNoModal open={vahvistus} \r\n            title=\"Vahvista poisto\"\r\n            text={`Haluatko varmasti poistaa kverin ${kaveri}`}\r\n            onNoClick={() => setVahvistus(false)}\r\n            onYesClick={handleKillFriend}\r\n        />\r\n        </>\r\n    )\r\n}\r\nexport default PoistaKaveri;","import { useMutation } from \"@apollo/client\"\r\nimport FriendRequestForm from \"./FriendRequestForm\"\r\nimport FriendRequests from \"./FriendRequests\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { setNotification } from '../../reducers/notificationReducer'\r\n\r\nimport { CircularProgress, Container, Divider, Typography, Button, TextField } from '@material-ui/core'\r\n\r\nimport { ANSWER_FRIEND_REQUEST, SEND_FRIEND_REQUEST } from \"../../graphql/mutations\"\r\n\r\nimport KaveriLista from \"./KaveriLista\"\r\n\r\nimport useGetMe from \"../../hooks/useGetMe\"\r\nimport PoistaKaveri from \"./PoistaKaveri\"\r\n\r\nconst Kaverit = () => {\r\n\r\n    const { me, loading, refetch, updateCache } = useGetMe();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [answerFriendRequest] = useMutation(ANSWER_FRIEND_REQUEST)\r\n    const [sendFriendRequest] = useMutation(SEND_FRIEND_REQUEST)\r\n\r\n    const handleSendFriendRequest = (e) => {\r\n        e.preventDefault()\r\n        sendFriendRequest({ variables: { name: e.target.kaveri.value } }).then(res => {\r\n            dispatch(setNotification('Kaveripyyntö lähetetty!', 'success'))\r\n        }).catch(e => {\r\n            dispatch(setNotification('Pyyntö epäonnistui: ' + e.message, 'error'))\r\n        })\r\n        e.target.kaveri.value = ''\r\n    }\r\n    const handleFriendRequest = async (friendId, answer) => {\r\n        try {\r\n            const res = await answerFriendRequest({ variables: { friendId, answer } })\r\n            updateCache(res.data.handleFriendRequest)\r\n            dispatch(setNotification('Kaveripyyntö käsitelty', 'success'))\r\n\r\n        } catch(e) {\r\n            console.log(e)\r\n            dispatch(setNotification('Tapahtui virhe: ' + e.message, 'error'))\r\n\r\n        }\r\n    }\r\n    const refetchMe = () => {\r\n        refetch();\r\n    }\r\n    if (loading || !me) {\r\n        return (<CircularProgress />)\r\n    }\r\n    console.log(me)\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h4\">Kaverit</Typography>\r\n            <KaveriLista kaverit={me.friends} />\r\n            <Divider />\r\n            <FriendRequestForm handleSendFriendRequest={handleSendFriendRequest} />\r\n            <Divider />\r\n            {(me.friendRequests.length > 0 && <FriendRequests pyynnot={me.friendRequests} handleFriendRequest={handleFriendRequest} />)}\r\n            <Divider />\r\n            <PoistaKaveri me={me} refetch={refetch} />\r\n            <Divider />\r\n            <Button fullWidth variant=\"outlined\" onClick={refetchMe}>Päivitä kaveripyynnöt</Button>\r\n\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default Kaverit","import { Typography } from \"@material-ui/core\"\r\n\r\nconst OmatTiedot = ({ me }) => {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h4\" gutterBottom>Tiedot</Typography>\r\n            <Typography variant=\"h6\">Tunnus</Typography>\r\n            <Typography>{me.user}</Typography>\r\n\r\n            <Typography variant=\"h6\">Näyttönimi</Typography>\r\n            <Typography>{me.name}</Typography>\r\n\r\n            <Typography variant=\"h6\">Sähköposti</Typography>\r\n            <Typography>{me.email}</Typography>\r\n        </div>\r\n    )\r\n}\r\nexport default OmatTiedot","import { Grid, Typography, TextField, Button } from '@material-ui/core'\r\nimport { useState } from 'react'\r\n\r\nconst SalasananVaihto = ({ vaihdaSalasana }) => {\r\n\r\n    \r\n    const [ pwHandler, setPwHandler ] = useState({\r\n        uusiPw: '',\r\n        uusiPw2: '',\r\n        ok: false\r\n    })\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        vaihdaSalasana( { password: pwHandler.uusiPw } )\r\n        setPwHandler( { uusiPw: '', uusiPw2: '', ok: false })\r\n    }\r\n    const handleChange = (e) => {\r\n        const updatedPwHandler = {...pwHandler}\r\n        updatedPwHandler[e.target.name] = e.target.value\r\n        if (updatedPwHandler.uusiPw === updatedPwHandler.uusiPw2 && updatedPwHandler.uusiPw !== '')\r\n            updatedPwHandler.ok = true\r\n        else updatedPwHandler.ok = false\r\n        setPwHandler(updatedPwHandler)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Typography variant=\"h5\" gutterBottom>Vaihda salasana</Typography>\r\n\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <TextField variant=\"outlined\" value={pwHandler.uusiPw} name=\"uusiPw\" label=\"Uusi salasana\" size=\"small\" type=\"password\" onChange={handleChange}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField variant=\"outlined\" value={pwHandler.uusiPw2} name=\"uusiPw2\" label=\"Uusi uudestaan\" size=\"small\" type=\"password\" onChange={handleChange} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={!pwHandler.ok}>Vaihda</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SalasananVaihto","import { Typography, TextField } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst VaihdaEmail = ({ handleChangeEmail }) => {\r\n\r\n    const [newEmail, setNewEmail ] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleChangeEmail({ email: newEmail })\r\n        setNewEmail('')\r\n    }\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Typography variant=\"h5\" label=\"email\">Vaihda email</Typography>\r\n            <TextField variant=\"outlined\" \r\n                name=\"email\" \r\n                value={newEmail} \r\n                placeholder=\"Uusi email\" \r\n                size=\"small\" \r\n                onChange={(e) => setNewEmail(e.target.value)}\r\n            />\r\n            &nbsp;<Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={!(validateEmail(newEmail))}>Vaihda</Button>\r\n        </form>\r\n    )\r\n\r\n}\r\nexport default VaihdaEmail;","import { Divider, Grid, Switch, Typography } from \"@material-ui/core\";\r\n\r\nconst Kytkimet = ({ me, handleChangeSettings }) => {\r\n    return (\r\n        <div>\r\n        <Grid container justify=\"space-between\" direction=\"row\" alignItems=\"center\">\r\n            <Grid item xs={8} component={Typography} >\r\n                Salli kavereiden nähdä tilastoni\r\n            </Grid>\r\n            <Grid item style={{ paddingRight: 10 }}>\r\n                <Switch color=\"primary\" checked={(me?.shareStats)} onChange={() => handleChangeSettings({ shareStats: !me.shareStats })} />\r\n            </Grid>\r\n        </Grid>\r\n        <Divider />\r\n        <Grid container justify=\"space-between\" direction=\"row\" alignItems=\"center\">\r\n            <Grid item xs={8} component={Typography} >\r\n                Estä kaikki kaveripyynnöt\r\n            </Grid>\r\n            <Grid item style={{ paddingRight: 10 }}>\r\n                <Switch color=\"primary\" checked={(me?.ignoreFriendRequests)} onChange={() => handleChangeSettings({ ignoreFriendRequests: !me.ignoreFriendRequests })} />\r\n            </Grid>\r\n        </Grid>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Kytkimet;","import { useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { Button, Container, Dialog, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DELETE_ACCOUNT } from \"../../graphql/mutations\";\r\nimport { setNotification } from \"../../reducers/notificationReducer\";\r\nimport { clearUser } from \"../../reducers/userReducer\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PoistaTunnukset = ({ me }) => {\r\n    const [open, setOpen] = useState(false)\r\n    const [nimi, setNimi] = useState('')\r\n\r\n    const [deleteAccount] = useMutation(DELETE_ACCOUNT);\r\n    const client = useApolloClient();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const handleClose = () => {\r\n        setNimi('');\r\n        setOpen(false);\r\n    }\r\n    const handleDeleteAccount = async () => {\r\n        try {\r\n            await deleteAccount()\r\n            client.clearStore()\r\n            window.localStorage.clear()\r\n            dispatch(clearUser());\r\n            dispatch(setNotification('Tunnuksesi on nyt poistettu, heihei!', 'warning', 'Tunnukset poistettu'))\r\n            history.push('/')\r\n        } catch (e) {\r\n            console.log(e)\r\n            dispatch(setNotification('Jokin meni peieleen! :(', 'error', 'VIRHE'))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\">Poista tunnukset</Typography>\r\n            <Typography paragraph>\r\n                Tunnuksesi poistetaan, pelit tuhotaan, frisbeet heitetään lampeen.\r\n            </Typography>\r\n            <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={() => setOpen(true)}>Poista tunnuksesi</Button>\r\n            <Dialog open={open} fullWidth maxWidth=\"xs\" PaperProps={{ style: { borderRadius: 20, border: (nimi === me.user) ? '5px solid red' : null } }} >\r\n                <Container>\r\n                    <Typography variant=\"h4\">Tunnusten poisto</Typography>\r\n                    <p>\r\n                        Vahvista poisto kirjoittamalla tunnuksesi tekstikenttään\r\n                    </p>\r\n                    <TextField variant=\"outlined\" size=\"small\" placeholder=\"Tunnuksesi...\" value={nimi} onChange={(e) => setNimi(e.target.value)} />\r\n                    <Grid container style={{ marginTop: 20 }} alignContent='space-between'>\r\n                        <Grid item xs>\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={handleDeleteAccount} disabled={nimi !== me.user}>Poista</Button>\r\n                        </Grid>\r\n                        <Grid item xs>\r\n\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>Peruuta</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\nexport default PoistaTunnukset;","import { Backdrop, CircularProgress, TextField, Button, Container, Typography, Divider } from \"@material-ui/core\"\r\nimport { useState } from \"react\";\r\n\r\nimport useGetMe from \"../../hooks/useGetMe\";\r\nimport OmatTiedot from \"./OmatTiedot\";\r\n\r\nimport SalasananVaihto from './SalasananVaihto'\r\nimport VaihdaEmail from './VaihdaEmail';\r\n\r\nimport { CHANGE_SETTINGS } from \"../../graphql/mutations\";\r\nimport { useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setNotification } from \"../../reducers/notificationReducer\";\r\nimport Kytkimet from \"./Kytkimet\";\r\nimport PoistaTunnukset from \"./PoistaTunnukset\";\r\n\r\nconst Asetukset = () => {\r\n\r\n    const { me, updateCache } = useGetMe();\r\n    const dispatch = useDispatch()\r\n    const [changeSettings] = useMutation(CHANGE_SETTINGS)\r\n    const client = useApolloClient()\r\n\r\n    const handleChangeSettings = async (newSettings) => {\r\n        const oldSettings = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            shareStats: null,\r\n            ignoreFriendRequests: null,\r\n        }\r\n        try {\r\n            const me = await changeSettings({ variables: { ...oldSettings, ...newSettings } })\r\n            updateCache(me.data.changeSettings)\r\n            dispatch(setNotification('Tietoja vaihdettu', 'success'))\r\n        } catch (e) {\r\n            console.log(e)\r\n            dispatch(setNotification(`Virhe! ${e.message}`, 'error'))\r\n\r\n        }\r\n    }\r\n\r\n    const handleCelarCache = async () => {\r\n        await client.clearStore()\r\n        dispatch(setNotification('Välimuisti tyhjennetty', 'info'))\r\n    }\r\n    if (me === null) {\r\n        return (\r\n            <Backdrop open={true}>\r\n                <CircularProgress />\r\n            </Backdrop>\r\n        )\r\n    }\r\n    return (\r\n        <Container>\r\n            <OmatTiedot me={me} />\r\n            <Divider />\r\n            <Kytkimet me={me} handleChangeSettings={handleChangeSettings} />\r\n            <Divider />\r\n            <SalasananVaihto vaihdaSalasana={handleChangeSettings} />\r\n            <Divider />\r\n            <VaihdaNayttonimi handleChangeName={handleChangeSettings} />\r\n            <Divider />\r\n            <VaihdaEmail me={me} handleChangeEmail={handleChangeSettings} />\r\n            <Divider />\r\n            <Typography variant=\"h5\">Tyhjennä välimuisti</Typography>\r\n            <Typography paragraph>Jos tuntuu että asiat eivät näy oikein, voit yrittää tyhjentää välimuistin.</Typography>\r\n            <Button variant=\"outlined\" color=\"secondary\" fullWidth onClick={handleCelarCache}>Tyhjennä välimuisti</Button>\r\n            <Divider />\r\n            <PoistaTunnukset me={me} />\r\n        </Container>\r\n    )\r\n\r\n}\r\nconst VaihdaNayttonimi = ({ handleChangeName }) => {\r\n\r\n    const [newName, setNewName] = useState('')\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        handleChangeName({ name: newName })\r\n        setNewName('')\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Typography variant=\"h5\">Vaihda näyttönimi</Typography>\r\n            <TextField value={newName} variant=\"outlined\" label=\"Uusi nimi\" size=\"small\" onChange={(e) => setNewName(e.target.value)} />\r\n            &nbsp;<Button variant=\"contained\" type=\"submit\" disabled={(newName.length < 3)} color=\"primary\">Ok</Button>\r\n        </form>\r\n\r\n    )\r\n}\r\nexport default Asetukset","import { Button as Nbutton } from '@material-ui/core'\r\n\r\nconst Button = ({ children, variant=\"contained\", color=\"primary\", ...props }) => {\r\n    const style = {\r\n        margin: '7px 0px',\r\n        marginRight: 5\r\n    }\r\n    return <Nbutton {...props} variant={variant} color={color} style={style}>{children}</Nbutton>\r\n}\r\n\r\nexport default Button;","import { useMutation } from \"@apollo/client\"\r\nimport { TextField, Divider, Container, Typography, Grid } from \"@material-ui/core\"\r\nimport { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { setNotification } from \"../../reducers/notificationReducer\"\r\n\r\nimport { CREATE_USER } from '../../graphql/mutations'\r\n\r\nimport Button from '../../components/Button'\r\nimport useIsUsernameAvailable from \"../../hooks/useIsUsernameAvailable\"\r\n\r\nconst CreateUserForm = () => {\r\n\r\n    const [createUser, cuData] = useMutation(CREATE_USER)\r\n    const dispatch = useDispatch()\r\n\r\n    const { username, setName, available } = useIsUsernameAvailable()\r\n\r\n    const [errors, setErrors] = useState({ tunnus: false, password: false })\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const vars = {\r\n            user: e.target.user.value,\r\n            password: e.target.password.value,\r\n            name: e.target.name.value,\r\n            email: e.target.email.value\r\n        }\r\n        if (vars.user === '') {\r\n            setErrors({ ...errors, tunnus: true })\r\n        } else if (vars.password === '' || vars.password !== e.target.password2.value) {\r\n            setErrors({ ...errors, password: true })\r\n        }\r\n        else {\r\n            try {\r\n                await createUser({ variables: vars })\r\n                dispatch(setNotification('Tunnukset luotiin onnistuneesti', 'success'))\r\n            } catch (e) {\r\n                dispatch(setNotification('Virhe tunnusten luonnissa: ' + e.message, 'error'))\r\n            }\r\n        }\r\n    }\r\n    if (cuData.loading) {\r\n        return (<h2>Creating user...</h2>)\r\n    }\r\n    if (cuData.called && !cuData.error) {\r\n        return (<Redirect to=\"/login\" />)\r\n    }\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h4\">Luo tunnus</Typography>\r\n            <Typography variant=\"h5\">Perustiedot</Typography>\r\n            <form onSubmit={handleSubmit}>\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                    <Grid item>\r\n                        <TextField error={errors.tunnus || available === false } name=\"user\" label=\"Tunnus\" variant=\"outlined\" required \r\n                            value={username}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            helperText={ (available === false) ? 'Tunnus on jo käytössä' : ''}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField error={errors.password} name=\"password\" type=\"password\" label=\"Salasana\" variant=\"outlined\" required  />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField error={errors.password} name=\"password2\" label=\"Salasana uudestaan\" type=\"password\" variant=\"outlined\" required />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Divider />\r\n                <Typography variant=\"h5\" gutterBottom>Lisätiedot</Typography>\r\n                <Typography paragraph>Ei pakollisia. Sähköpostiosoitteen antaminen mahdollistaa tunnuksen palauttamisen.</Typography>\r\n\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                    <Grid item>\r\n                    <TextField name=\"name\" label=\"Nimi\" variant=\"outlined\" />\r\n\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <TextField name=\"email\" label=\"Sähköposti\" variant=\"outlined\" fullWidth />\r\n\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <Button disabled={(available === false)} type=\"submit\" size=\"large\" variant=\"contained\"color=\"primary\">Luo tunnus</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreateUserForm","import { Button, Card, CardHeader, CardContent, Collapse } from '@material-ui/core'\r\nimport { laskePisteet, timestamp2String, tulokset2ChartData } from '../../utils/stuff'\r\nimport { useState } from 'react'\r\nimport { IconButton, Typography } from '@material-ui/core'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\n\r\nimport BarChart from '../../components/BarChart'\r\n\r\nconst Pelikortti = ({ peli, aktivoi, poista, user }) => {\r\n\r\n    let { tulokset } = peli.players.find(p => p.user.user === user)\r\n    const pisteet = laskePisteet(tulokset)\r\n\r\n    const [showStats, setShotStats] = useState(false)\r\n\r\n    if (tulokset.length === 0) {\r\n        tulokset = [0]\r\n    }\r\n    return (\r\n        <Card style={{ marginBottom: '5px' }} variant=\"outlined\">\r\n            <CardHeader\r\n                avatar= {\r\n                    (!peli.finished && <WarningIcon style={{color: 'orange'}}/>)\r\n                }\r\n                action={\r\n                    <IconButton onClick={() => setShotStats(!showStats)} size=\"small\">\r\n                        <ExpandMoreIcon />\r\n                    </IconButton>\r\n                }\r\n\r\n                title={ (showStats) ? pisteet : null}\r\n                subheader={ ((showStats) ? timestamp2String(peli.timestamp) : pisteet) }\r\n            />\r\n            <Collapse in={showStats} unmountOnExit timeout=\"auto\">\r\n                <CardContent style={{paddingTop: '0px'}}>\r\n                    <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={() => aktivoi(peli.id)}>Aktivoi</Button>&nbsp;                                 \r\n                    <Button size=\"small\" variant=\"outlined\" color=\"secondary\" onClick={() => poista(peli.id)}>Poista</Button>\r\n                    <Typography>\r\n                        Puttiprossa: { (tulokset.reduce((total, cur) => total+cur) / (tulokset.length*5) * 100).toFixed()}\r\n                    </Typography>\r\n                    <BarChart data={tulokset2ChartData(tulokset)} />\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    )\r\n\r\n}\r\nexport default Pelikortti","import { useMutation, useQuery } from \"@apollo/client\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { GET_GAMES } from \"../../graphql/queries\"\r\nimport { DELETE_GAME } from '../../graphql/mutations'\r\nimport { Backdrop, CircularProgress, Container, Typography } from '@material-ui/core'\r\nimport Pelikortti from \"./Pelikortti\"\r\n\r\nimport { setNotification } from '../../reducers/notificationReducer'\r\nimport { useState } from \"react\"\r\nimport YesNoModal from \"../../components/YesNoModal\"\r\n\r\nconst VanhatPelit = () => {\r\n\r\n    const getGames = useQuery(GET_GAMES)\r\n    const user = useSelector(state => state.user)\r\n    const dispatch = useDispatch()\r\n    const [poistaPeliId, setPoistaPeliId] = useState(null)\r\n    const [poistaPeli] = useMutation(DELETE_GAME)\r\n\r\n    const aktivoi = (g) => {\r\n        dispatch({ type: 'SET_ID', data: { roundId: g } })\r\n        dispatch(setNotification('Siirry peliin valitsemalla \\'Uusi peli\\'', 'info', 'Peli aktivoitu'))\r\n    }\r\n    const handlePoistaPeli = async () => {\r\n        console.log('Poistetaan', poistaPeliId)\r\n        try {\r\n            poistaPeli({ variables: { roundId: poistaPeliId }, refetchQueries: [{ query: GET_GAMES }] })\r\n            dispatch( setNotification('Peli poistettu', 'success'))\r\n        } catch (e) {\r\n            dispatch( setNotification('Virhe pelin poistamisessa', 'error'))\r\n            console.log(e.message)\r\n        }\r\n    }\r\n    if (!user.user) {\r\n        return (\r\n            <Redirect to=\"/login\" />\r\n        )\r\n    }\r\n\r\n    if (getGames.loading) {\r\n        return (\r\n            <Backdrop open={true}>\r\n                <CircularProgress />\r\n            </Backdrop>\r\n        )\r\n    }\r\n    console.log(getGames)\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Typography variant=\"h5\" gutterBottom>Vanhat peli</Typography>\r\n                {getGames.data.getGames.map(g =>\r\n                    <Pelikortti user={user.user}\r\n                        aktivoi={aktivoi} poista={(roundId) => setPoistaPeliId(roundId)}\r\n                        peli={g} key={g.id}\r\n                    />)}\r\n            </Container>\r\n            <YesNoModal open={(poistaPeliId)}\r\n                title=\"Oletko varma?\"\r\n                text=\"Haluatko varmasti poistaa pelin?\"\r\n                close={() => setPoistaPeliId(false)}\r\n                onYesClick={handlePoistaPeli}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default VanhatPelit","import { Container, Typography, Paper, Link } from '@material-ui/core'\r\nimport useStyles from '../../hooks/useStyles'\r\n\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport { useEffect } from 'react';\r\n\r\nconst Etusivu = () => {\r\n\r\n    const tyylit = useStyles()\r\n\r\n    useEffect(() => {\r\n        Aos.init({ duration: 3000 })\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Paper className={tyylit.paper} id=\"iso-naytto\">\r\n                <Typography variant=\"h4\">\r\n                    Iso näyttö\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Onpas Teillä todella suuri ja mahtava näyttö. Tiedoksenne että\r\n                    tämä sovellus on suunniteltu käytettäväksi kännykän pikkuruiselta näytöltä.\r\n                </Typography>\r\n            </Paper>\r\n            <Paper className={tyylit.paper} data-aos=\"fade-up\">\r\n                <Typography variant=\"h4\">\r\n                    Mitä tämä on?\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Rageputt on Fullstackopen 2021 -kurssin harjoitustyön tulos. Fullstackopen on Helsingin yliopiston\r\n                    järjestämä kurssi jossa tutustutaan JavaScriptilla tapahtuvaan moderniin websovelluskehitykseen. Pääpaino on\r\n                    React-kirjaston avulla toteutettavissa single page -sovelluksissa, ja niitä tukevissa Node.js:llä toteutetuissa\r\n                    REST-rajapinnoissa.\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    <Link>fullstackopen.com</Link>\r\n                </Typography>\r\n            </Paper>\r\n            <Paper className={tyylit.paper} data-aos=\"fade-up\">\r\n                <Typography variant=\"h4\">\r\n                    Rageputt\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Sovelluksen idea on pitää kirjaa frisbeegolffin JYLY-puttipelin tuloksista. Tulokset tallentuvat palvelimelle\r\n                    reaaliaikaisesti. Pelejä voi pelata yksin tai yhdessä kaverin kanssa. Jokaisella peliin osallistuvalla tulee\r\n                    olla oma tunnus. Pelatessa porukalla tarvitsee vain yhden henkilön kirjata tuloksia sillä tulokset päivittyvät\r\n                    automaattisesti kaikille pelaajille.\r\n                </Typography>\r\n\r\n            </Paper>\r\n            <Paper className={tyylit.paper} data-aos=\"fade-up\">\r\n                <Typography variant=\"h4\">\r\n                    JYLY?!?\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    JYLY Putting game is a putt practice drill/game created by Markus Lindqvist\r\n                    (found by nickename JYLY in dgcr forums as well as frisbeegolf-forum). The drill\r\n                    emphasizes putting from various distances. The more putts you sink and the further\r\n                    you do it, more points you get. (copypaste)\r\n                </Typography>\r\n            </Paper>\r\n            <Paper className={tyylit.paper} data-aos=\"fade-up\">\r\n                <Typography variant=\"h4\">\r\n                    Kerro lisää\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Jotta voit käyttää sovellusta, tulee sinun luoda oma tunnus. Tunnuksen luomiseen riittää vain että keksit itsellesi\r\n                    tunnuksen ja salasanan. Voit myös antaa sähköpostiosoitteesi siltä varalta että unohdat\r\n                    salasanasi.\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Tunnuksen luotuasi voit aloittaa armottoman puttaamisen. Myöhemmin kun on liian pimeää puttaamiselle, voit ihailla ihanaa\r\n                    diagrammidataa!\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Jos satut omistamaan ystäviä, voit lähettää heille kaveripyynnön ja lisätä heidät ystäviksesi.\r\n                    Tämän jälkeen voitte yhdessä tuumin puttailla toisianne.\r\n                </Typography>\r\n            </Paper>\r\n            <Paper className={tyylit.paper} data-aos=\"fade-up\">\r\n                <Typography variant=\"h4\">\r\n                    Vanhan pelin jatkaminen\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Jos haluat jatkaa vanhaa peliä, valitse 'vanhat pelit' -osiosta kyseinen peli ja paina aktivointinappia. Tämän\r\n                    jälkeen voit jatkaa tulosten kirjaamista 'uusi peli' -sivulla.\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Avoimen pelin tunnistaa oranssista kolmiosta.\r\n                </Typography>\r\n\r\n            </Paper>\r\n            <Paper className={tyylit.paper} data-aos=\"fade-up\">\r\n                <Typography variant=\"h4\">\r\n                    Pelin päättäminen\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Kun peli on päätetty peliasetukse sivulta, tulosten kirjaaminen estetään ja tulokset otetaan huomioon statistiikka-sivulla.\r\n                </Typography>\r\n            </Paper>\r\n\r\n\r\n        </Container>\r\n\r\n    )\r\n}\r\nexport default Etusivu\r\n","import { useMutation } from \"@apollo/client\"\r\nimport { Container, Typography, TextField } from \"@material-ui/core\"\r\nimport { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { RESTORE_ACCOUNT } from \"../graphql/mutations\"\r\nimport Button from './Button'\r\n\r\nconst RestoreAccount = () => {\r\n    const [mailSent, setMailSent ] = useState(false)\r\n    const [ restoreAccount ] = useMutation( RESTORE_ACCOUNT )\r\n\r\n    const handleResetAccount = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            await restoreAccount( { variables: { email: e.target.email.value }} )\r\n            setMailSent(true)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        e.target.email.value = ''\r\n    }\r\n\r\n    if (mailSent) {\r\n        return (\r\n            <Container>\r\n                <Typography variant=\"h4\" gutterBottom>Salasana lähetetty</Typography>\r\n                <Typography paragraph>Kertakäyttöinen salasana on lähetetty sähköpostiisi, olettaen että annoit\r\n                oikean sähköpostiosoitteen.</Typography>\r\n                <Typography paragraph>Tarkista sähköpostisi, sen jälkeen <Link to=\"/login\">kirjaudu sisään</Link>.</Typography>\r\n            </Container>\r\n        )\r\n    }\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                Tunnuksen palautus\r\n            </Typography>\r\n            <Typography paragraph>\r\n                Kirjoita alla olevaan kenttään sähköpostiosoitteesi. Kertakäyttöinen salasana lähetetään antamaasi sähköpostiosoitteeseen.\r\n                Mikäli et koskaan liittänyt sähköpostiosoitetta tunnukseesi niin... tough luck.\r\n            </Typography>\r\n            <form onSubmit={handleResetAccount}>\r\n                <TextField label=\"Sähköpostiosoite\" name=\"email\" variant=\"outlined\" fullWidth />\r\n                <Button type=\"submit\">Palauta</Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\nexport default RestoreAccount","import {  Container, Divider, Typography } from \"@material-ui/core\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setNotification } from \"../reducers/notificationReducer\";\r\nimport Button from \"./Button\"\r\n\r\nconst DevPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const notify = (type) => {\r\n        dispatch( setNotification('Tämä on kokeilu!', type, 'Kokeilu'))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h3\">DevPage</Typography>\r\n            <Typography variant=\"h5\">Tervetuloa salaiselle dev-sivulle!</Typography>\r\n            <Divider />\r\n            <Typography variant=\"h5\">Testaa notifikaatioita</Typography>\r\n            <Button onClick={() => notify('info')}>Info</Button>\r\n            <Button onClick={() => notify('success')}>Success</Button>\r\n            <Button onClick={() => notify('warning')}>Warning</Button>\r\n            <Button onClick={() => notify('error')}>Error</Button>\r\n        </Container>\r\n    )\r\n}\r\nexport default DevPage","import { Fade, Paper } from '@material-ui/core'\r\nimport useStyles from '../hooks/useStyles'\r\n\r\nconst Page = (props) => {\r\n    const tyylit = useStyles()\r\n    return (\r\n        <Paper className={tyylit.paper}>\r\n            {props.children}\r\n        </Paper>\r\n    )\r\n}\r\nexport default Page","import { Container, Button, Fade } from \"@material-ui/core\"\r\nimport { SchemaMetaFieldDef } from \"graphql\";\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst PageContainer = (props) => {\r\n\r\n    const [sivu, setSivu] = useState(0)\r\n    const handleClick = (dir) => {\r\n        if (sivu + dir >= 0 && sivu + dir < props.children.length)\r\n            setSivu(sivu + dir)\r\n    }\r\n    return (\r\n        <div>\r\n            <div style={{ width: '100%', display: 'flex', justifyContent: 'space-around' }}>\r\n                <Button onClick={() => handleClick(-1)} disabled={sivu <= 0}>Edellinen</Button>\r\n                <Button onClick={() => handleClick(+1)} disabled={(sivu >= props.children.length-1)}>Seuraava</Button>\r\n            </div>\r\n                {props.children[sivu]}\r\n                </div>\r\n    )\r\n\r\n\r\n}\r\nexport default PageContainer","export default __webpack_public_path__ + \"static/media/tkortti.dc5b766e.jpg\";","export default __webpack_public_path__ + \"static/media/korti.2fd39798.png\";","import { Container, Typography } from \"@material-ui/core\";\r\nimport Page from \"../../components/Page\";\r\nimport PageContainer from \"../../components/PageContainer\";\r\nimport tuloskortti from '../../assets/tkortti.jpg';\r\nimport etaisyys from '../../assets/korti.png';\r\nimport { typography } from \"@material-ui/system\";\r\n\r\nconst Ohje = () => {\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <PageContainer>\r\n                <Page>\r\n                    <Typography variant=\"h4\">Pelin valmistelu</Typography>\r\n                    <Typography paragraph>\r\n                    Aloita merkitsemällä etäisyydet metrin välein korista välillä 5 - 10m.\r\n                    <img src={etaisyys} alt=\"etaisyys\" style={{ width: '100%'}} />\r\n                    </Typography>\r\n                </Page>\r\n                <Page>\r\n                    <Typography variant=\"h4\">Uusi peli</Typography>\r\n                    <Typography paragraph>\r\n                        Valitse valikosta 'Uusi peli', klikkaa 'Aloita uusi peli' -nappia ja valitse mahdolliset pelaajat itsesi lisäksi.\r\n                    </Typography>\r\n                    <Typography paragraph>\r\n                        Pelissä on 20 kierrosta. Jokaisella kierroksella puttaat 5 kertaa. Pisteitä saat aina kun putti menee sisään.\r\n                        Seuraavan kierroksen etäisyys määräytyy edellisen kierroksen onnistuneiden puttien perusteella.\r\n                    </Typography>\r\n                </Page>\r\n                <Page>\r\n                    <Typography variant=\"h4\">Tuloskortti</Typography>\r\n                    <img src={tuloskortti} alt=\"kuva\" style={{ width: '100%' }} />\r\n                    <ol>\r\n                        <li>Puttietäisyys</li>\r\n                        <li>Kierros</li>\r\n                        <li>Pisteet</li>\r\n                        <li>Edellinen/seuraava kierros</li>\r\n                        <li>Kieroksen tulos/putteja sisään</li>\r\n                    </ol>\r\n                </Page>\r\n                <Page>\r\n                    <Typography variant=\"h4\">Pelin loppu</Typography>\r\n                    <Typography paragraph>\r\n                        Kun 20 kierrosta on täynnä, valitse pelin asetukset -välilehdestä 'Päätä peli'. Peliä ei voi\r\n                        enää muokata ja tulokset otetaan mukaan tilastoihin.\r\n                    </Typography>\r\n                </Page>\r\n            </PageContainer>\r\n        </Container>\r\n    )\r\n}\r\nexport default Ohje;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Button, Container, Divider, Grid, TextField, Typography } from \"@material-ui/core\"\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useGetMe from \"../hooks/useGetMe\";\r\n\r\nconst Palaute = () => {\r\n\r\n    const { me } = useGetMe();\r\n    \r\n    const [nimi, setNimi ] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [viesti, setViesti] = useState('')\r\n    const [rating, setRating] = useState(4)\r\n\r\n    const [ lahetaPalaute ] = useMutation( gql`\r\n        mutation sendFeedback($name: String, $email: String, $rating: Int, $message: String) {\r\n            sendFeedback(name: $name, email: $email, rating: $rating message: $message)\r\n        }\r\n    `)\r\n\r\n    const [msgSent, setMsgSent] = useState(false)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        lahetaPalaute( { variables: {\r\n            name: nimi,\r\n            email,\r\n            rating,\r\n            message: viesti\r\n        }})\r\n        setMsgSent(true)\r\n    }\r\n\r\n    useEffect( () => {\r\n        if (me !== null) {\r\n            setNimi(me.name)\r\n            setEmail(me.email)\r\n        }\r\n    }, [me])\r\n    if (msgSent === true) {\r\n        return (<Container>\r\n            <Typography variant=\"h4\">Palaute lähetetty</Typography>\r\n            <Typography paragraph>Kiitos palautteestasi!</Typography>\r\n        </Container>)\r\n    }\r\n    return (\r\n        <Container>\r\n            <form onSubmit={handleSubmit}>\r\n            <Typography variant=\"h4\">Palaute</Typography>\r\n            <Typography variant=\"h5\" style={{ marginBottom: 0 }}>Nimi</Typography>\r\n            <TextField variant=\"outlined\" placeholder=\"Nimi\" size=\"small\" value={nimi} onChange={(e) => setNimi(e.target.value)} />\r\n            \r\n            <Typography variant=\"h5\" style={{ marginBottom: 0, marginTop: 10 }}>Email</Typography>\r\n            <TextField variant=\"outlined\" placeholder=\"Email\" size=\"small\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n\r\n            <Typography variant=\"h5\" style={{ marginBottom: 0, marginTop: 10 }}>Arvosana</Typography>\r\n            <Rating value={rating} name=\"rating\"\r\n                onChange={(e, value) => setRating(value)}\r\n                size=\"large\"\r\n            />\r\n\r\n            <Typography variant=\"h5\" style={{ marginBottom: 0, marginTop: 10 }}>Viesti</Typography>\r\n            <TextField variant=\"outlined\" placeholder=\"Kirjoita viesti...\" \r\n                size=\"small\" value={viesti} onChange={(e) => setViesti(e.target.value)}\r\n                multiline={true} rows={7} fullWidth\r\n            />\r\n            <Button type=\"submit\" style={{ marginTop: 10 }} variant=\"contained\" color=\"primary\" fullWidth>Lähetä palaute</Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\nexport default Palaute;","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom'\n\nimport Notification from './components/Notification'\nimport Vetomenu from './components/Vetomenu'\nimport YlaPalkki from './components/YlaPalkki';\n\nimport Peli from './pages/Peli';\nimport Statsit from './pages/Statsit'\nimport LoginForm from './components/LoginForm'\nimport Kaverit from './pages/Kaverit'\nimport Asetukset from './pages/Asetukset'\nimport CreateUserForm from './pages/CreateUser';\nimport VanhatPelit from './pages/VanhatPelit';\nimport Etusivu from './pages/Etusivu'\n\nimport { setUser } from './reducers/userReducer';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useGetMe from './hooks/useGetMe';\nimport RestoreAccount from './components/RestoreAccount';\nimport DevPage from './components/DevPage';\nimport Ohje from './pages/Ohje';\nimport { Paper, Snackbar } from '@material-ui/core';\nimport Palaute from './components/Palaute';\n\n\nfunction App() {\n\n  const [menuOpen, setMenuOpen] = useState(false)\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n\n  const { me, loading } = useGetMe();\n\n  const openMenu = () => {\n    setMenuOpen(true)\n  }\n  useEffect(() => {\n    if (!loading && me != null && !user.user) {\n      dispatch(setUser(me.name, me.user))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [me])\n\n  return (\n    <>\n      <div id=\"AppBar\">\n        <YlaPalkki openMenu={openMenu} />\n        <Vetomenu menuOpen={menuOpen} setMenuOpen={setMenuOpen} />\n\n        <Notification />\n      </div>\n      <div id=\"AppContent\">\n        <Switch>\n          <Route path=\"/kaverit\">\n            <Kaverit />\n          </Route>\n          <Route path=\"/palaute\">\n            <Palaute />\n          </Route>\n          <Route path=\"/login\" >\n            <LoginForm />\n          </Route>\n          <Route path=\"/vanhat\" >\n            <VanhatPelit />\n          </Route>\n          <Route path=\"/peli\">\n            <Peli />\n          </Route>\n          <Route path=\"/stats\">\n            <Statsit />\n          </Route>\n          <Route path=\"/dev\">\n            <DevPage />\n          </Route>\n          <Route path=\"/createUser\">\n            <CreateUserForm />\n          </Route>\n          <Route path=\"/asetukset\">\n            <Asetukset />\n          </Route>\n          <Route path=\"/palautus\">\n            <RestoreAccount />\n          </Route>\n          <Route path=\"/ohje\">\n            <Ohje />\n          </Route>\n          <Route path=\"/\">\n            <Etusivu />\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { setContext } from 'apollo-link-context'\r\nimport { ApolloClient, HttpLink, InMemoryCache, split } from '@apollo/client'\r\n\r\nimport { getMainDefinition } from '@apollo/client/utilities';\r\nimport { WebSocketLink } from '@apollo/client/link/ws'\r\n\r\n\r\nlet ApolloUri = 'https://rageputt.herokuapp.com/graphql'\r\nif (process.env.NODE_ENV !== 'production') {\r\n  console.log('Development mode selected!')\r\n  ApolloUri = 'http://localhost:4000/graphql'\r\n}\r\n\r\nconst httpLink = new HttpLink({ uri: ApolloUri })\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('rageToken')\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `bearer ${token}` : null\r\n    }\r\n  }\r\n})\r\n\r\nconst socketLink = new WebSocketLink({\r\n  uri: (process.env.NODE_ENV !== 'production') ? 'ws://localhost:4000/graphql' : 'wss://rageputt.herokuapp.com/graphql',\r\n  options: {\r\n    reconnect: true\r\n  }\r\n})\r\n\r\nconst splitLink = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query)\r\n    return (\r\n      definition.kind === 'OperationDefinition' &&\r\n      definition.operation === 'subscription'\r\n    )\r\n  },\r\n  socketLink,\r\n  authLink.concat(httpLink)\r\n\r\n)\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: splitLink,\r\n  connectToDevTools: true,\r\n})\r\n\r\nexport default client;","\r\nconst reducer = (state = {round: 0, roundId: null}, action) => {\r\n    switch(action.type) {\r\n        case 'INC_ROUND':\r\n            if (state.round < 19)\r\n                return {...state, round: state.round + 1 }\r\n            else return state;\r\n        case 'DEC_ROUND':\r\n            if (state.round >= 1)\r\n                return {...state, round: state.round - 1 } \r\n            else return state;\r\n        case 'SET_ID':\r\n            return { ...state, roundId: action.data.roundId }\r\n        case 'INIT_ROUND':\r\n            return action.data;\r\n        case 'RESET_ROUND':\r\n            return { round: 0, roundId: null }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers, createStore } from 'redux';\r\nimport tuloksetReducer from '../reducers/tuloksetReducer'\r\nimport userReducer from '../reducers/userReducer'\r\nimport notificationReducer from '../reducers/notificationReducer'\r\n\r\nconst reducers = combineReducers({\r\n    tulokset: tuloksetReducer,\r\n    user: userReducer,\r\n    notification: notificationReducer\r\n})\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store\r\n","import { createMuiTheme, rgbToHex } from \"@material-ui/core\"\r\nimport { lightGreen, red } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n        fontFamily: 'Quicksand',\r\n        fontWeightLight: 300,\r\n        fontWeightMedium: 500,\r\n        fontWeightRegular: 400,\r\n        fontWeightBold: 700,\r\n        h3: {\r\n            marginBottom: 15,\r\n        },\r\n        h4: {\r\n            marginBottom: 15,\r\n        },\r\n        h5: {\r\n            marginBottom: 15\r\n        },\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: '#aed581',\r\n        },\r\n        secondary: red,\r\n        action: {\r\n            disabled: '#8F8F8F'\r\n        },\r\n        success: {\r\n            main: 'rgba(76, 175, 80, 0.85)',\r\n            \r\n        },\r\n        info: {\r\n            main: 'rgba(33, 150, 243, 0.85)'\r\n        }\r\n    },\r\n    overrides: {\r\n        MuiAlert: {\r\n            root: {\r\n                borderRadius: 15,\r\n            },\r\n        },\r\n        MuiCard: {\r\n            root: {\r\n                borderRadius: 15,\r\n            }\r\n        },\r\n        MuiListItem: {\r\n            root: {\r\n                fontFamily: 'Quicksand',\r\n            },\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                borderRadius: 10,\r\n                fontFamily: 'Quicksand',\r\n                height: 40\r\n            },\r\n        },\r\n        MuiDivider: {\r\n            root: {\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n            }\r\n        },\r\n        MuiAppBar: {\r\n            root: {\r\n                borderRadius: 0\r\n            },\r\n        },\r\n        MuiTextField: {\r\n            root: {\r\n                backgroundColor: '#ffffff',\r\n            }\r\n        },\r\n        MuiOutlinedInput: {\r\n            root: {\r\n                borderRadius: 15,\r\n                backgroundColor: '#ffffff',\r\n\r\n            },\r\n        },\r\n        MuiPaper: {\r\n            root: {\r\n                borderRadius: 15,\r\n                padding: 10,\r\n            },\r\n        },\r\n        MuiContainer: {\r\n            root: {\r\n                paddingBottom: 10,\r\n                paddingTop: 10,\r\n                maxWidth: 700,\r\n            },\r\n        },\r\n    }\r\n});\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport { ApolloProvider } from '@apollo/client'\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport client from './utils/apolloClient';\nimport store from './utils/store'\n\nimport theme from './utils/theme';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <Router>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </Router>\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n"],"sourceRoot":""}